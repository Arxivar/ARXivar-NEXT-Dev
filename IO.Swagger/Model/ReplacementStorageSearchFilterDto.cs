/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ReplacementStorageSearchFilterDto
    /// </summary>
    [DataContract]
    public partial class ReplacementStorageSearchFilterDto :  IEquatable<ReplacementStorageSearchFilterDto>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ReplacementStorageSearchFilterDto" /> class.
        /// </summary>
        /// <param name="IsAos">IsAos.</param>
        /// <param name="Period">Period.</param>
        /// <param name="DmDevDocDevice">DmDevDocDevice.</param>
        public ReplacementStorageSearchFilterDto(int? IsAos = null, string Period = null, string DmDevDocDevice = null)
        {
            this.IsAos = IsAos;
            this.Period = Period;
            this.DmDevDocDevice = DmDevDocDevice;
        }
        
        /// <summary>
        /// Gets or Sets IsAos
        /// </summary>
        [DataMember(Name="isAos", EmitDefaultValue=false)]
        public int? IsAos { get; set; }
        /// <summary>
        /// Gets or Sets Period
        /// </summary>
        [DataMember(Name="period", EmitDefaultValue=false)]
        public string Period { get; set; }
        /// <summary>
        /// Gets or Sets DmDevDocDevice
        /// </summary>
        [DataMember(Name="dm_DevDoc_Device", EmitDefaultValue=false)]
        public string DmDevDocDevice { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ReplacementStorageSearchFilterDto {\n");
            sb.Append("  IsAos: ").Append(IsAos).Append("\n");
            sb.Append("  Period: ").Append(Period).Append("\n");
            sb.Append("  DmDevDocDevice: ").Append(DmDevDocDevice).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ReplacementStorageSearchFilterDto);
        }

        /// <summary>
        /// Returns true if ReplacementStorageSearchFilterDto instances are equal
        /// </summary>
        /// <param name="other">Instance of ReplacementStorageSearchFilterDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ReplacementStorageSearchFilterDto other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.IsAos == other.IsAos ||
                    this.IsAos != null &&
                    this.IsAos.Equals(other.IsAos)
                ) && 
                (
                    this.Period == other.Period ||
                    this.Period != null &&
                    this.Period.Equals(other.Period)
                ) && 
                (
                    this.DmDevDocDevice == other.DmDevDocDevice ||
                    this.DmDevDocDevice != null &&
                    this.DmDevDocDevice.Equals(other.DmDevDocDevice)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.IsAos != null)
                    hash = hash * 59 + this.IsAos.GetHashCode();
                if (this.Period != null)
                    hash = hash * 59 + this.Period.GetHashCode();
                if (this.DmDevDocDevice != null)
                    hash = hash * 59 + this.DmDevDocDevice.GetHashCode();
                return hash;
            }
        }
    }

}
