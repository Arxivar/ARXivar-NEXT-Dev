/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Class of behaviour associated with a profiling mask
    /// </summary>
    [DataContract]
    public partial class ProfileMaskBehaviourDTO :  IEquatable<ProfileMaskBehaviourDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileMaskBehaviourDTO" /> class.
        /// </summary>
        /// <param name="LoadAdditional">Load the additional fields.</param>
        /// <param name="ShowGroups">Show groups.</param>
        /// <param name="PaMode">Possible values:  0: None  1: OnlyNever  2: OnlyOptionally  3: NeverOrOptionally  4: OnlyAlways  5: AlwaysOrNever  6: AlwaysOrOptionally  7: All .</param>
        public ProfileMaskBehaviourDTO(bool? LoadAdditional = default(bool?), bool? ShowGroups = default(bool?), int? PaMode = default(int?))
        {
            this.LoadAdditional = LoadAdditional;
            this.ShowGroups = ShowGroups;
            this.PaMode = PaMode;
        }
        
        /// <summary>
        /// Load the additional fields
        /// </summary>
        /// <value>Load the additional fields</value>
        [DataMember(Name="loadAdditional", EmitDefaultValue=false)]
        public bool? LoadAdditional { get; set; }

        /// <summary>
        /// Show groups
        /// </summary>
        /// <value>Show groups</value>
        [DataMember(Name="showGroups", EmitDefaultValue=false)]
        public bool? ShowGroups { get; set; }

        /// <summary>
        /// Possible values:  0: None  1: OnlyNever  2: OnlyOptionally  3: NeverOrOptionally  4: OnlyAlways  5: AlwaysOrNever  6: AlwaysOrOptionally  7: All 
        /// </summary>
        /// <value>Possible values:  0: None  1: OnlyNever  2: OnlyOptionally  3: NeverOrOptionally  4: OnlyAlways  5: AlwaysOrNever  6: AlwaysOrOptionally  7: All </value>
        [DataMember(Name="paMode", EmitDefaultValue=false)]
        public int? PaMode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProfileMaskBehaviourDTO {\n");
            sb.Append("  LoadAdditional: ").Append(LoadAdditional).Append("\n");
            sb.Append("  ShowGroups: ").Append(ShowGroups).Append("\n");
            sb.Append("  PaMode: ").Append(PaMode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ProfileMaskBehaviourDTO);
        }

        /// <summary>
        /// Returns true if ProfileMaskBehaviourDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ProfileMaskBehaviourDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProfileMaskBehaviourDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LoadAdditional == input.LoadAdditional ||
                    (this.LoadAdditional != null &&
                    this.LoadAdditional.Equals(input.LoadAdditional))
                ) && 
                (
                    this.ShowGroups == input.ShowGroups ||
                    (this.ShowGroups != null &&
                    this.ShowGroups.Equals(input.ShowGroups))
                ) && 
                (
                    this.PaMode == input.PaMode ||
                    (this.PaMode != null &&
                    this.PaMode.Equals(input.PaMode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LoadAdditional != null)
                    hashCode = hashCode * 59 + this.LoadAdditional.GetHashCode();
                if (this.ShowGroups != null)
                    hashCode = hashCode * 59 + this.ShowGroups.GetHashCode();
                if (this.PaMode != null)
                    hashCode = hashCode * 59 + this.PaMode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
