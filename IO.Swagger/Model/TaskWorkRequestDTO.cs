/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// TaskWorkRequestDTO
    /// </summary>
    [DataContract]
    public partial class TaskWorkRequestDTO :  IEquatable<TaskWorkRequestDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TaskWorkRequestDTO" /> class.
        /// </summary>
        /// <param name="Select">Select.</param>
        /// <param name="WorkFlowIds">WorkFlowIds.</param>
        /// <param name="TaskWorkIds">TaskWorkIds.</param>
        public TaskWorkRequestDTO(SelectDTO Select = null, List<int?> WorkFlowIds = null, List<int?> TaskWorkIds = null)
        {
            this.Select = Select;
            this.WorkFlowIds = WorkFlowIds;
            this.TaskWorkIds = TaskWorkIds;
        }
        
        /// <summary>
        /// Gets or Sets Select
        /// </summary>
        [DataMember(Name="select", EmitDefaultValue=false)]
        public SelectDTO Select { get; set; }
        /// <summary>
        /// Gets or Sets WorkFlowIds
        /// </summary>
        [DataMember(Name="workFlowIds", EmitDefaultValue=false)]
        public List<int?> WorkFlowIds { get; set; }
        /// <summary>
        /// Gets or Sets TaskWorkIds
        /// </summary>
        [DataMember(Name="taskWorkIds", EmitDefaultValue=false)]
        public List<int?> TaskWorkIds { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TaskWorkRequestDTO {\n");
            sb.Append("  Select: ").Append(Select).Append("\n");
            sb.Append("  WorkFlowIds: ").Append(WorkFlowIds).Append("\n");
            sb.Append("  TaskWorkIds: ").Append(TaskWorkIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as TaskWorkRequestDTO);
        }

        /// <summary>
        /// Returns true if TaskWorkRequestDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of TaskWorkRequestDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TaskWorkRequestDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Select == other.Select ||
                    this.Select != null &&
                    this.Select.Equals(other.Select)
                ) && 
                (
                    this.WorkFlowIds == other.WorkFlowIds ||
                    this.WorkFlowIds != null &&
                    this.WorkFlowIds.SequenceEqual(other.WorkFlowIds)
                ) && 
                (
                    this.TaskWorkIds == other.TaskWorkIds ||
                    this.TaskWorkIds != null &&
                    this.TaskWorkIds.SequenceEqual(other.TaskWorkIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Select != null)
                    hash = hash * 59 + this.Select.GetHashCode();
                if (this.WorkFlowIds != null)
                    hash = hash * 59 + this.WorkFlowIds.GetHashCode();
                if (this.TaskWorkIds != null)
                    hash = hash * 59 + this.TaskWorkIds.GetHashCode();
                return hash;
            }
        }
    }

}
