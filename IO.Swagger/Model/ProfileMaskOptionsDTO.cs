/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ProfileMaskOptionsDTO
    /// </summary>
    [DataContract]
    public partial class ProfileMaskOptionsDTO :  IEquatable<ProfileMaskOptionsDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileMaskOptionsDTO" /> class.
        /// </summary>
        /// <param name="ShowNotes">ShowNotes.</param>
        /// <param name="ShowAttachments">ShowAttachments.</param>
        /// <param name="ShowFileSelection">ShowFileSelection.</param>
        /// <param name="ShowScannerSelection">ShowScannerSelection.</param>
        /// <param name="ShowBarcodeSelection">ShowBarcodeSelection.</param>
        public ProfileMaskOptionsDTO(bool? ShowNotes = null, bool? ShowAttachments = null, bool? ShowFileSelection = null, bool? ShowScannerSelection = null, bool? ShowBarcodeSelection = null)
        {
            this.ShowNotes = ShowNotes;
            this.ShowAttachments = ShowAttachments;
            this.ShowFileSelection = ShowFileSelection;
            this.ShowScannerSelection = ShowScannerSelection;
            this.ShowBarcodeSelection = ShowBarcodeSelection;
        }
        
        /// <summary>
        /// Gets or Sets ShowNotes
        /// </summary>
        [DataMember(Name="showNotes", EmitDefaultValue=false)]
        public bool? ShowNotes { get; set; }
        /// <summary>
        /// Gets or Sets ShowAttachments
        /// </summary>
        [DataMember(Name="showAttachments", EmitDefaultValue=false)]
        public bool? ShowAttachments { get; set; }
        /// <summary>
        /// Gets or Sets ShowFileSelection
        /// </summary>
        [DataMember(Name="showFileSelection", EmitDefaultValue=false)]
        public bool? ShowFileSelection { get; set; }
        /// <summary>
        /// Gets or Sets ShowScannerSelection
        /// </summary>
        [DataMember(Name="showScannerSelection", EmitDefaultValue=false)]
        public bool? ShowScannerSelection { get; set; }
        /// <summary>
        /// Gets or Sets ShowBarcodeSelection
        /// </summary>
        [DataMember(Name="showBarcodeSelection", EmitDefaultValue=false)]
        public bool? ShowBarcodeSelection { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ProfileMaskOptionsDTO {\n");
            sb.Append("  ShowNotes: ").Append(ShowNotes).Append("\n");
            sb.Append("  ShowAttachments: ").Append(ShowAttachments).Append("\n");
            sb.Append("  ShowFileSelection: ").Append(ShowFileSelection).Append("\n");
            sb.Append("  ShowScannerSelection: ").Append(ShowScannerSelection).Append("\n");
            sb.Append("  ShowBarcodeSelection: ").Append(ShowBarcodeSelection).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as ProfileMaskOptionsDTO);
        }

        /// <summary>
        /// Returns true if ProfileMaskOptionsDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of ProfileMaskOptionsDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ProfileMaskOptionsDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ShowNotes == other.ShowNotes ||
                    this.ShowNotes != null &&
                    this.ShowNotes.Equals(other.ShowNotes)
                ) && 
                (
                    this.ShowAttachments == other.ShowAttachments ||
                    this.ShowAttachments != null &&
                    this.ShowAttachments.Equals(other.ShowAttachments)
                ) && 
                (
                    this.ShowFileSelection == other.ShowFileSelection ||
                    this.ShowFileSelection != null &&
                    this.ShowFileSelection.Equals(other.ShowFileSelection)
                ) && 
                (
                    this.ShowScannerSelection == other.ShowScannerSelection ||
                    this.ShowScannerSelection != null &&
                    this.ShowScannerSelection.Equals(other.ShowScannerSelection)
                ) && 
                (
                    this.ShowBarcodeSelection == other.ShowBarcodeSelection ||
                    this.ShowBarcodeSelection != null &&
                    this.ShowBarcodeSelection.Equals(other.ShowBarcodeSelection)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ShowNotes != null)
                    hash = hash * 59 + this.ShowNotes.GetHashCode();
                if (this.ShowAttachments != null)
                    hash = hash * 59 + this.ShowAttachments.GetHashCode();
                if (this.ShowFileSelection != null)
                    hash = hash * 59 + this.ShowFileSelection.GetHashCode();
                if (this.ShowScannerSelection != null)
                    hash = hash * 59 + this.ShowScannerSelection.GetHashCode();
                if (this.ShowBarcodeSelection != null)
                    hash = hash * 59 + this.ShowBarcodeSelection.GetHashCode();
                return hash;
            }
        }
    }

}
