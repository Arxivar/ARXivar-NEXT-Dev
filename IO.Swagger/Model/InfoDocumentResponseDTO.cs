/* 
 * WebAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: data
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Document info for external app request
    /// </summary>
    [DataContract]
    public partial class InfoDocumentResponseDTO :  IEquatable<InfoDocumentResponseDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InfoDocumentResponseDTO" /> class.
        /// </summary>
        /// <param name="profileSchema">profileSchema.</param>
        /// <param name="closeDate">If the document has already been closed.</param>
        /// <param name="docnumber">Profile System Id.</param>
        /// <param name="table">Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE .</param>
        /// <param name="documentId">Docnumber [DM_PROFILE (14)] or ProcessDocId [DM_PROCESSDOC (74)].</param>
        /// <param name="documentExtraId">TaskId in case of Table &#x3D; DM_PROCESSDOC (74).</param>
        /// <param name="updateOptionRequired">Deve essere specificata la scelta di profilazione al momento dell&#39;update del checkin del documento.</param>
        /// <param name="defaultUpdateOption">Possible values:  0: None  1: ForceRevision  2: ForceOverWrite .</param>
        public InfoDocumentResponseDTO(EditProfileSchemaDTO profileSchema = default(EditProfileSchemaDTO), DateTime? closeDate = default(DateTime?), int? docnumber = default(int?), int? table = default(int?), int? documentId = default(int?), int? documentExtraId = default(int?), bool? updateOptionRequired = default(bool?), int? defaultUpdateOption = default(int?))
        {
            this.ProfileSchema = profileSchema;
            this.CloseDate = closeDate;
            this.Docnumber = docnumber;
            this.Table = table;
            this.DocumentId = documentId;
            this.DocumentExtraId = documentExtraId;
            this.UpdateOptionRequired = updateOptionRequired;
            this.DefaultUpdateOption = defaultUpdateOption;
        }
        
        /// <summary>
        /// Gets or Sets ProfileSchema
        /// </summary>
        [DataMember(Name="profileSchema", EmitDefaultValue=false)]
        public EditProfileSchemaDTO ProfileSchema { get; set; }

        /// <summary>
        /// If the document has already been closed
        /// </summary>
        /// <value>If the document has already been closed</value>
        [DataMember(Name="closeDate", EmitDefaultValue=false)]
        public DateTime? CloseDate { get; set; }

        /// <summary>
        /// Profile System Id
        /// </summary>
        /// <value>Profile System Id</value>
        [DataMember(Name="docnumber", EmitDefaultValue=false)]
        public int? Docnumber { get; set; }

        /// <summary>
        /// Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE 
        /// </summary>
        /// <value>Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE </value>
        [DataMember(Name="table", EmitDefaultValue=false)]
        public int? Table { get; set; }

        /// <summary>
        /// Docnumber [DM_PROFILE (14)] or ProcessDocId [DM_PROCESSDOC (74)]
        /// </summary>
        /// <value>Docnumber [DM_PROFILE (14)] or ProcessDocId [DM_PROCESSDOC (74)]</value>
        [DataMember(Name="documentId", EmitDefaultValue=false)]
        public int? DocumentId { get; set; }

        /// <summary>
        /// TaskId in case of Table &#x3D; DM_PROCESSDOC (74)
        /// </summary>
        /// <value>TaskId in case of Table &#x3D; DM_PROCESSDOC (74)</value>
        [DataMember(Name="documentExtraId", EmitDefaultValue=false)]
        public int? DocumentExtraId { get; set; }

        /// <summary>
        /// Deve essere specificata la scelta di profilazione al momento dell&#39;update del checkin del documento
        /// </summary>
        /// <value>Deve essere specificata la scelta di profilazione al momento dell&#39;update del checkin del documento</value>
        [DataMember(Name="updateOptionRequired", EmitDefaultValue=false)]
        public bool? UpdateOptionRequired { get; set; }

        /// <summary>
        /// Possible values:  0: None  1: ForceRevision  2: ForceOverWrite 
        /// </summary>
        /// <value>Possible values:  0: None  1: ForceRevision  2: ForceOverWrite </value>
        [DataMember(Name="defaultUpdateOption", EmitDefaultValue=false)]
        public int? DefaultUpdateOption { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InfoDocumentResponseDTO {\n");
            sb.Append("  ProfileSchema: ").Append(ProfileSchema).Append("\n");
            sb.Append("  CloseDate: ").Append(CloseDate).Append("\n");
            sb.Append("  Docnumber: ").Append(Docnumber).Append("\n");
            sb.Append("  Table: ").Append(Table).Append("\n");
            sb.Append("  DocumentId: ").Append(DocumentId).Append("\n");
            sb.Append("  DocumentExtraId: ").Append(DocumentExtraId).Append("\n");
            sb.Append("  UpdateOptionRequired: ").Append(UpdateOptionRequired).Append("\n");
            sb.Append("  DefaultUpdateOption: ").Append(DefaultUpdateOption).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InfoDocumentResponseDTO);
        }

        /// <summary>
        /// Returns true if InfoDocumentResponseDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of InfoDocumentResponseDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InfoDocumentResponseDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ProfileSchema == input.ProfileSchema ||
                    (this.ProfileSchema != null &&
                    this.ProfileSchema.Equals(input.ProfileSchema))
                ) && 
                (
                    this.CloseDate == input.CloseDate ||
                    (this.CloseDate != null &&
                    this.CloseDate.Equals(input.CloseDate))
                ) && 
                (
                    this.Docnumber == input.Docnumber ||
                    (this.Docnumber != null &&
                    this.Docnumber.Equals(input.Docnumber))
                ) && 
                (
                    this.Table == input.Table ||
                    (this.Table != null &&
                    this.Table.Equals(input.Table))
                ) && 
                (
                    this.DocumentId == input.DocumentId ||
                    (this.DocumentId != null &&
                    this.DocumentId.Equals(input.DocumentId))
                ) && 
                (
                    this.DocumentExtraId == input.DocumentExtraId ||
                    (this.DocumentExtraId != null &&
                    this.DocumentExtraId.Equals(input.DocumentExtraId))
                ) && 
                (
                    this.UpdateOptionRequired == input.UpdateOptionRequired ||
                    (this.UpdateOptionRequired != null &&
                    this.UpdateOptionRequired.Equals(input.UpdateOptionRequired))
                ) && 
                (
                    this.DefaultUpdateOption == input.DefaultUpdateOption ||
                    (this.DefaultUpdateOption != null &&
                    this.DefaultUpdateOption.Equals(input.DefaultUpdateOption))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ProfileSchema != null)
                    hashCode = hashCode * 59 + this.ProfileSchema.GetHashCode();
                if (this.CloseDate != null)
                    hashCode = hashCode * 59 + this.CloseDate.GetHashCode();
                if (this.Docnumber != null)
                    hashCode = hashCode * 59 + this.Docnumber.GetHashCode();
                if (this.Table != null)
                    hashCode = hashCode * 59 + this.Table.GetHashCode();
                if (this.DocumentId != null)
                    hashCode = hashCode * 59 + this.DocumentId.GetHashCode();
                if (this.DocumentExtraId != null)
                    hashCode = hashCode * 59 + this.DocumentExtraId.GetHashCode();
                if (this.UpdateOptionRequired != null)
                    hashCode = hashCode * 59 + this.UpdateOptionRequired.GetHashCode();
                if (this.DefaultUpdateOption != null)
                    hashCode = hashCode * 59 + this.DefaultUpdateOption.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
