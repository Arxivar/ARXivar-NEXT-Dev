/* 
 * WebAPI
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: data
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// VerifyConditionDTO
    /// </summary>
    [DataContract]
    public partial class VerifyConditionDTO :  IEquatable<VerifyConditionDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VerifyConditionDTO" /> class.
        /// </summary>
        /// <param name="certSecurityVerifyLevelEnum">Possible values:  0: Local  1: Tls .</param>
        /// <param name="checkOnlineRevocation">checkOnlineRevocation.</param>
        /// <param name="verifyDateTimeUtc">verifyDateTimeUtc.</param>
        public VerifyConditionDTO(int? certSecurityVerifyLevelEnum = default(int?), bool? checkOnlineRevocation = default(bool?), DateTime? verifyDateTimeUtc = default(DateTime?))
        {
            this.CertSecurityVerifyLevelEnum = certSecurityVerifyLevelEnum;
            this.CheckOnlineRevocation = checkOnlineRevocation;
            this.VerifyDateTimeUtc = verifyDateTimeUtc;
        }
        
        /// <summary>
        /// Possible values:  0: Local  1: Tls 
        /// </summary>
        /// <value>Possible values:  0: Local  1: Tls </value>
        [DataMember(Name="certSecurityVerifyLevelEnum", EmitDefaultValue=false)]
        public int? CertSecurityVerifyLevelEnum { get; set; }

        /// <summary>
        /// Gets or Sets CheckOnlineRevocation
        /// </summary>
        [DataMember(Name="checkOnlineRevocation", EmitDefaultValue=false)]
        public bool? CheckOnlineRevocation { get; set; }

        /// <summary>
        /// Gets or Sets VerifyDateTimeUtc
        /// </summary>
        [DataMember(Name="verifyDateTimeUtc", EmitDefaultValue=false)]
        public DateTime? VerifyDateTimeUtc { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VerifyConditionDTO {\n");
            sb.Append("  CertSecurityVerifyLevelEnum: ").Append(CertSecurityVerifyLevelEnum).Append("\n");
            sb.Append("  CheckOnlineRevocation: ").Append(CheckOnlineRevocation).Append("\n");
            sb.Append("  VerifyDateTimeUtc: ").Append(VerifyDateTimeUtc).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VerifyConditionDTO);
        }

        /// <summary>
        /// Returns true if VerifyConditionDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of VerifyConditionDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VerifyConditionDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CertSecurityVerifyLevelEnum == input.CertSecurityVerifyLevelEnum ||
                    (this.CertSecurityVerifyLevelEnum != null &&
                    this.CertSecurityVerifyLevelEnum.Equals(input.CertSecurityVerifyLevelEnum))
                ) && 
                (
                    this.CheckOnlineRevocation == input.CheckOnlineRevocation ||
                    (this.CheckOnlineRevocation != null &&
                    this.CheckOnlineRevocation.Equals(input.CheckOnlineRevocation))
                ) && 
                (
                    this.VerifyDateTimeUtc == input.VerifyDateTimeUtc ||
                    (this.VerifyDateTimeUtc != null &&
                    this.VerifyDateTimeUtc.Equals(input.VerifyDateTimeUtc))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CertSecurityVerifyLevelEnum != null)
                    hashCode = hashCode * 59 + this.CertSecurityVerifyLevelEnum.GetHashCode();
                if (this.CheckOnlineRevocation != null)
                    hashCode = hashCode * 59 + this.CheckOnlineRevocation.GetHashCode();
                if (this.VerifyDateTimeUtc != null)
                    hashCode = hashCode * 59 + this.VerifyDateTimeUtc.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
