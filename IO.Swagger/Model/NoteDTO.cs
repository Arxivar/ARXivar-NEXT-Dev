/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Class of note
    /// </summary>
    [DataContract]
    public partial class NoteDTO :  IEquatable<NoteDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NoteDTO" /> class.
        /// </summary>
        /// <param name="Id">Identifier.</param>
        /// <param name="Docnumber">Document Identifier.</param>
        /// <param name="User">Author.</param>
        /// <param name="UserCompleteName">Author Name.</param>
        /// <param name="CreationDate">Creation Date.</param>
        /// <param name="Comment">Text.</param>
        /// <param name="Revision">Document Revision.</param>
        /// <param name="Aosflag">Conservation.</param>
        /// <param name="CountersTable">Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE .</param>
        /// <param name="ExternalId">External Identifier.</param>
        public NoteDTO(int? Id = default(int?), int? Docnumber = default(int?), int? User = default(int?), string UserCompleteName = default(string), DateTime? CreationDate = default(DateTime?), string Comment = default(string), int? Revision = default(int?), bool? Aosflag = default(bool?), int? CountersTable = default(int?), int? ExternalId = default(int?))
        {
            this.Id = Id;
            this.Docnumber = Docnumber;
            this.User = User;
            this.UserCompleteName = UserCompleteName;
            this.CreationDate = CreationDate;
            this.Comment = Comment;
            this.Revision = Revision;
            this.Aosflag = Aosflag;
            this.CountersTable = CountersTable;
            this.ExternalId = ExternalId;
        }
        
        /// <summary>
        /// Identifier
        /// </summary>
        /// <value>Identifier</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }

        /// <summary>
        /// Document Identifier
        /// </summary>
        /// <value>Document Identifier</value>
        [DataMember(Name="docnumber", EmitDefaultValue=false)]
        public int? Docnumber { get; set; }

        /// <summary>
        /// Author
        /// </summary>
        /// <value>Author</value>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public int? User { get; set; }

        /// <summary>
        /// Author Name
        /// </summary>
        /// <value>Author Name</value>
        [DataMember(Name="userCompleteName", EmitDefaultValue=false)]
        public string UserCompleteName { get; set; }

        /// <summary>
        /// Creation Date
        /// </summary>
        /// <value>Creation Date</value>
        [DataMember(Name="creationDate", EmitDefaultValue=false)]
        public DateTime? CreationDate { get; set; }

        /// <summary>
        /// Text
        /// </summary>
        /// <value>Text</value>
        [DataMember(Name="comment", EmitDefaultValue=false)]
        public string Comment { get; set; }

        /// <summary>
        /// Document Revision
        /// </summary>
        /// <value>Document Revision</value>
        [DataMember(Name="revision", EmitDefaultValue=false)]
        public int? Revision { get; set; }

        /// <summary>
        /// Conservation
        /// </summary>
        /// <value>Conservation</value>
        [DataMember(Name="aosflag", EmitDefaultValue=false)]
        public bool? Aosflag { get; set; }

        /// <summary>
        /// Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE 
        /// </summary>
        /// <value>Possible values:  0: DM_ALLEGATIDOC  1: DM_ALLEGATIFAX  2: DM_ALLEGATIWORK  3: DM_ASSOCIAZIONI  4: DM_CAMPIPRATICA  5: DM_CAMPIPRATICHECBO  6: DM_CAMPISPECGRP  7: DM_CONTATTI  8: DM_FASCICOLI  9: DM_FAXOUT  10: DM_NOTE  11: DM_OPZIONI  12: DM_PERMESSI_FOLDER  13: DM_PERMESSI_RUBRICA  14: DM_PROFILE  15: DM_GRUPPI  16: DM_RUBRICA  17: DM_UTENTI  18: DM_REVISIONI  19: DM_SECURITY  20: DM_STATOSECURITY  21: DM_TIPIPRATICHE  22: DM_TABELLE  23: DM_TIPI_UTENTI  24: DM_ELENCO_ORG  25: DM_ORGANIGRAMMA  26: DM_ORGDESIGN  27: DM_CATRUBRICHE  28: DM_CAMPI  29: DM_CAMPI_VALORI  30: DM_RUBRICA_OPZIONALI  31: DM_NOTECONTATTI  32: DM_SECURITY_DOC  33: DM_NPCE_OUT  34: DM_LOG  35: DM_NPCE_LOG  36: DM_DESKTOP  37: DM_VARIABILIPROCESSO  38: DM_DATIPROFILO  39: DM_AUTOPROFILO  40: DM_PROTOCOLLI  41: DM_DATI_ENTE  42: DM_NUMERAZIONE  43: DM_FILEINFOLDER  44: DM_INOLTRO  45: DM_DOCMOV  46: DM_CAMPIMESSAGGIO  47: DM_DETTAGLIMAIL  48: DM_MAILOUT  49: DM_DELEGATI  50: DM_MSG  51: DM_ACCOUNT  52: DM_FOLDERTYPE  53: SD_ASSOCDOC  54: DM_COMBO  55: DM_REGOLEUNIVOCITA  56: DM_BARCODE  57: DM_DOCALLEGATI  58: DM_STARTWORKFLOW  59: DM_FILTRO  60: DM_ELENCOPRATICHE  61: DM_TESTO  62: DM_PROCBATCH  63: DM_EVENTIFLOW  64: DM_TRADUZIONI  65: DM_TIPIDOCUMENTO  66: DM_GRUPPIMODELLI  67: DM_ASSOCIAFOLDER_DATIPROFILO  68: DM_ASSOCIAFOLDER  69: DM_MODULIOFFICE  70: DM_EMERGENZA  71: DM_TASKEXECUTE  72: DM_NOTEWORK  73: DM_PERMESSIALLEGATI  74: DM_PROCESSDOC  75: DM_MASSIVEUPDATES  76: DM_MASSIVEUPDATES_DATIPROFILO  77: DM_MASSIVEUPDATES_DATA  78: DM_COMANDITASK  79: DM_TRADUZIONI_PKG  80: DM_FIGUREPROCESSO  81: DM_PROMEMORIA  82: DM_ALLEGATIPROMO  83: DM_SIGNDELEGATE  84: DM_SIGNCERT  85: DM_SIGNCERTLOCATION  86: DM_VARIABILIQUERY  87: DM_ASSOCIAFOLDER_MAPPING  88: DM_PERMESSINOTE  89: DM_WORKFLOW_EXTRAGRANT  90: DM_QUEUE  91: DM_QUEUEDETAIL  92: NOTHING  93: DM_CACHE  94: DM_THUMBNAIL  95: DM_SMSACCOUNT  96: DM_SHARING  97: DM_SHARING_DEFINITION  98: DM_SHARING_DETAIL  99: DM_SHARING_RECEIVER  100: DM_SHARING_OPERATION  101: DM_TASKWORK  102: DM_TASKWORK_CLOSE  103: DM_INSTRUCTIONS  104: DM_TASKS  105: DM_WORKFLOW  106: DM_AOO  107: DM_LOGONPROVIDERS  108: DM_MASSIVEUPDATES_MAPPING  109: DM_STORAGE  110: DM_TIPIDOC_DEFMAIL  111: DM_LOGS  112: DM_PN_DEVICE  113: DM_PN_NOTIFICATIONS  114: DM_COLLABORATION  115: DM_COLLABORATION_MASTER  116: DM_COLLABORATION_DETAIL  117: WS_VERSAMENTI  118: WS_VERSAMENTI_DETT_ATT  119: WS_VERSAMENTI_DETT_NOTE  120: WS_VERSAMENTI_DETT_DOC  121: WS_AOS  122: WS_AOS_MAPPING  123: WS_DOCTOIX  124: WS_DOCTOIX_DETAIL  125: WS_TIPIDOCUMENTO  126: WS_CREDENTIAL  127: WS_CLASSINORM  128: WS_CLASSINORM_FILTER  129: WS_TIPIDOC_EXPORT  130: WS_TIPIDOC_ROTT  131: WS_NOTIFY  132: WS_NOTIFY_MAPPING  133: DM_COLLABORATION_TEMPLATE  134: DM_COLLABORATION_TAKEOFF  135: DM_COLLABORATION_TEMPLATE_M  136: WS_CONFCLASSEIXCE  137: WS_CAMPIMETADATIIXCE  138: WS_DOCTOIXCE  139: WS_DOCTOIXCE_DETAIL  140: WS_VERSAMENTO  141: DM_PLUGINCUSTOM_DETT  142: DM_PLUGINCUSTOM  143: DM_PLUGINCUSTOMWF  144: DM_PLUGINCUSTOMWF_CONF  145: DM_LINKS  146: DM_LINKS_MANSDYN  147: DM_LINKS_MANSDYN_DETT  148: DM_MANSIONIDYNTASK  149: DM_FASCICOLI_ASSOCIAFOLDER  150: DM_WEBSERVICESWF_LINK  151: DM_TASKDOC_ESITI  152: DM_PLUGINCUSTOM_CONF  153: DM_PLUGINCUSTOM_CONFIP  154: DM_PLUGINCUSTOM_CONFUSER  155: DM_INDEX  156: WS_DOCTOIXCE_VALIDATION  157: DM_BARCODE_SETTINGS  158: DM_LOG_MASTER  159: DM_UTENTI_USEDPSW  160: DM_CAMPIMODULI_MATRICE  161: DM_MAPWORKFLOW  162: DM_ALLEGATIDOC_REV  163: DM_FASCICOLI_RULES  164: DM_FASCICOLIRULESDETAIL  165: DM_FASCICOLI_RULES_USERS  166: DM_ARXDRIVESHARERULE  167: DM_ARXDRIVESHARERULEUSERS  168: DM_LAYOUT  169: DM_LAYOUT_DETAILS  170: DM_FASCICOLI_MASK  171: DM_MAILWF  172: DM_CONV_MESSAGES  173: DM_CONVERSATION  174: DM_MAILWF_ARCHIVE </value>
        [DataMember(Name="countersTable", EmitDefaultValue=false)]
        public int? CountersTable { get; set; }

        /// <summary>
        /// External Identifier
        /// </summary>
        /// <value>External Identifier</value>
        [DataMember(Name="externalId", EmitDefaultValue=false)]
        public int? ExternalId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NoteDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Docnumber: ").Append(Docnumber).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  UserCompleteName: ").Append(UserCompleteName).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  Revision: ").Append(Revision).Append("\n");
            sb.Append("  Aosflag: ").Append(Aosflag).Append("\n");
            sb.Append("  CountersTable: ").Append(CountersTable).Append("\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NoteDTO);
        }

        /// <summary>
        /// Returns true if NoteDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of NoteDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NoteDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Docnumber == input.Docnumber ||
                    (this.Docnumber != null &&
                    this.Docnumber.Equals(input.Docnumber))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                ) && 
                (
                    this.UserCompleteName == input.UserCompleteName ||
                    (this.UserCompleteName != null &&
                    this.UserCompleteName.Equals(input.UserCompleteName))
                ) && 
                (
                    this.CreationDate == input.CreationDate ||
                    (this.CreationDate != null &&
                    this.CreationDate.Equals(input.CreationDate))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.Revision == input.Revision ||
                    (this.Revision != null &&
                    this.Revision.Equals(input.Revision))
                ) && 
                (
                    this.Aosflag == input.Aosflag ||
                    (this.Aosflag != null &&
                    this.Aosflag.Equals(input.Aosflag))
                ) && 
                (
                    this.CountersTable == input.CountersTable ||
                    (this.CountersTable != null &&
                    this.CountersTable.Equals(input.CountersTable))
                ) && 
                (
                    this.ExternalId == input.ExternalId ||
                    (this.ExternalId != null &&
                    this.ExternalId.Equals(input.ExternalId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Docnumber != null)
                    hashCode = hashCode * 59 + this.Docnumber.GetHashCode();
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                if (this.UserCompleteName != null)
                    hashCode = hashCode * 59 + this.UserCompleteName.GetHashCode();
                if (this.CreationDate != null)
                    hashCode = hashCode * 59 + this.CreationDate.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.Revision != null)
                    hashCode = hashCode * 59 + this.Revision.GetHashCode();
                if (this.Aosflag != null)
                    hashCode = hashCode * 59 + this.Aosflag.GetHashCode();
                if (this.CountersTable != null)
                    hashCode = hashCode * 59 + this.CountersTable.GetHashCode();
                if (this.ExternalId != null)
                    hashCode = hashCode * 59 + this.ExternalId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
