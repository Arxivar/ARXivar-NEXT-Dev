/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Class of log item
    /// </summary>
    [DataContract]
    public partial class LogDTO :  IEquatable<LogDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LogDTO" /> class.
        /// </summary>
        /// <param name="Id">Identifier.</param>
        /// <param name="LogLevel">Possible values:  1: INFORMATION  2: SUCCESSAUDIT  3: FAILUREAUDIT  4: WARNING  5: ERROR .</param>
        /// <param name="LogMessage">Message.</param>
        /// <param name="LogDate">Creation Date.</param>
        /// <param name="UserId">Author.</param>
        /// <param name="UserNameComplete">Author Name.</param>
        /// <param name="IpLogger">Ip Address.</param>
        /// <param name="InfoType">Possible values:  0: Nothing  1: WcfService  2: LogInClient  3: LogOutClient  4: LogInServer  5: LogOutServer  6: LogInSPR  7: LogOutSPR  8: LogInWEB  9: LogOutWEB  10: LogInGeneric  11: LogOutGeneric  12: LogInOCR  13: LogOutOCR  14: WcfServiceDmModuliDelete  15: LogIn  16: LogOut  17: GetDocument  18: SetDocument  19: DmNoteUpdated  20: PluginQueueLogInfo  21: SdAssocDocInserted  22: SdAssocDocDeleted  23: DmBarcodeDeleted  24: DmBarcodeUnMatchProfile  25: DmAllegatiFaxInsertDocument  26: DmDocOpenCheckOut  27: DocumentInsertRelationship  28: RevisioniGetDocument  29: RevisioniDelete  30: DmNpceOutInsert  31: DmNpceOutUpdate  32: DmNpceOutDelete  33: DmAssociazioniInsert  34: DmAllegatiWorkInsert  35: DmProcessDocSetDocumentInEditBuffer  36: DmProcessDocSetDocumentInLine  37: DmProcessDocSetDocumentForProfile  38: DmAllegatiDocInsert  39: DmAllegatiDocUpdate  40: DmAllegatiDocDelete  41: ProfileUpdateProtocollo  42: ProfileDeleted  43: ExternalCall  44: ProfileUndoCheckOut  45: ProfileInserted  46: ProfileLogReaded  47: ProfileUpdate  48: Profile_Field_DocName  49: Profile_Field_Aoo  50: Profile_Field_Numero  51: Profile_Field_DataDoc  52: Profile_Field_Mittente  53: Profile_Field_Destinatario  54: Profile_Field_Cc  55: Profile_Field_CreationDate  56: Profile_Field_Impronta  57: Profile_Field_Device  58: Profile_Field_DataFile  59: Profile_Field_Importante  60: Profile_Field_Revisione  61: Profile_Field_Autore  62: Profile_Field_Protocollo  63: Profile_Field_Anno  64: Profile_Field_Bloccato  65: Profile_Field_Stato  66: Profile_Field_InOut  67: Profile_Field_Scadenza  68: Profile_Field_Flag  69: Profile_Field_WorkFlow  70: Profile_Field_GestRev  71: Profile_Field_EtichettaCd  72: Profile_Field_EtichettaAos  73: Profile_Field_Associazioni  74: Profile_Field_OpenDoc  75: Profile_Field_Allegati  76: Profile_Field_Emergenza  77: Profile_Field_IsAos  78: Profile_Field_EtiReader  79: Profile_Field_ScadAos  80: Profile_Field_Aggiuntivi  81: Profile_Field_DataProt  82: Profile_Field_Compressed  83: ProfileLogMigrated  84: Profile_Field_Originale  85: ProfileSigned  86: ProfileInsertedInFolder  87: ProfileInsertedInFaxOut  88: ProfileInsertedInPratica  89: ProfileInsertedNote  90: LicenseViolated  91: BarcodePrinted  92: WorkflowStarted  93: WorkflowEnded  94: WorkflowEndedForced  95: WorkflowDeleted  96: DmAllegatiDocSignOtpSent  97: DmProfileSignOtpSent  98: ProfileRemovedFromFolder  99: ProfileRemovedFromPratica  100: Dm_Sharing_Insert  101: Dm_Sharing_Update  102: Dm_Sharing_Expiration  103: Dm_Sharing_Read  104: Dm_Sharing_Delete  105: Dm_Sharing_Expiration_NpceOut  106: RemoveDocument  107: Dm_Sharing_Alert  108: Dm_Sharing_MailOut  109: DocumentRemovedFromRelationship  110: DmAssociazioniDelete  111: Dm_Queue_Start  112: Dm_Queue_Change_Progress  113: Dm_Queue_Scheduled  114: Dm_Queue_Terminated  115: Dm_Queue_Cancelled  116: Dm_Queue_Waiting  117: Dm_Queue_Warning  118: Dm_Queue_Info  119: Dm_Instructions_Insert  120: Dm_Instructions_Update  121: Dm_Instructions_Delete  122: Dm_DatiProfilo_Field_Id  123: Dm_DatiProfilo_Field_Valore  124: Dm_DatiProfilo_Field_Contatti  125: Dm_DatiProfilo_Field_Fax  126: Dm_DatiProfilo_Field_Tel  127: Dm_DatiProfilo_Field_Indirizzo  128: Dm_DatiProfilo_Field_Mail  129: Dm_DatiProfilo_Field_Localita  130: Dm_DatiProfilo_Field_Cap  131: Dm_DatiProfilo_Field_Provincia  132: Dm_DatiProfilo_Field_Nazione  133: Dm_DatiProfilo_Field_Contatto  134: Dm_DatiProfilo_Field_Mansione  135: Dm_DatiProfilo_Field_TelNome  136: Dm_DatiProfilo_Field_FaxNome  137: Dm_DatiProfilo_Field_Cell  138: Dm_DatiProfilo_Field_Abitazione  139: Dm_DatiProfilo_Field_Reparto  140: Dm_DatiProfilo_Field_Ufficio  141: Dm_DatiProfilo_Field_Email  142: Dm_DatiProfilo_Field_Riferimento  143: Dm_DatiProfilo_Field_CodFis  144: Dm_DatiProfilo_Field_PartIva  145: Dm_DatiProfilo_Field_Priorita  146: Dm_DatiProfilo_Field_Codice  147: Profile_Field_Senders  148: Dm_Collaboration_Create  149: Dm_Collaboration_ReCollaborate  150: Dm_Collaboration_TakeOff  151: Dm_Collaboration_Delete  152: Profile_Field_DocumentType  153: Profile_Field_Tipo2  154: Profile_Field_Tipo3  155: Dm_Collaboration_Terminate  156: AllegatiDocSigned  157: LogInFailed .</param>
        /// <param name="InfoTypeMessage">Message Type.</param>
        /// <param name="InfoInt">Information in integer format.</param>
        /// <param name="SessionId">Session Identifier.</param>
        /// <param name="SoftwareName">Software Name.</param>
        /// <param name="SoftwareType">Software Type.</param>
        /// <param name="InfoString">Information in string format.</param>
        /// <param name="ParentId">Identifier of the reference object.</param>
        /// <param name="LogKind">Possible values:  0: None  1: Profile  2: Sharing  3: Queue  4: Instruction  5: Collaboration .</param>
        /// <param name="HistoryInt">Integer for Deleting Rules.</param>
        /// <param name="HistoryString">String for Deleting Rules.</param>
        /// <param name="Childs">Sublevel Items.</param>
        public LogDTO(string Id = default(string), int? LogLevel = default(int?), string LogMessage = default(string), DateTime? LogDate = default(DateTime?), int? UserId = default(int?), string UserNameComplete = default(string), string IpLogger = default(string), int? InfoType = default(int?), string InfoTypeMessage = default(string), int? InfoInt = default(int?), string SessionId = default(string), string SoftwareName = default(string), string SoftwareType = default(string), string InfoString = default(string), string ParentId = default(string), int? LogKind = default(int?), int? HistoryInt = default(int?), string HistoryString = default(string), List<LogDTO> Childs = default(List<LogDTO>))
        {
            this.Id = Id;
            this.LogLevel = LogLevel;
            this.LogMessage = LogMessage;
            this.LogDate = LogDate;
            this.UserId = UserId;
            this.UserNameComplete = UserNameComplete;
            this.IpLogger = IpLogger;
            this.InfoType = InfoType;
            this.InfoTypeMessage = InfoTypeMessage;
            this.InfoInt = InfoInt;
            this.SessionId = SessionId;
            this.SoftwareName = SoftwareName;
            this.SoftwareType = SoftwareType;
            this.InfoString = InfoString;
            this.ParentId = ParentId;
            this.LogKind = LogKind;
            this.HistoryInt = HistoryInt;
            this.HistoryString = HistoryString;
            this.Childs = Childs;
        }
        
        /// <summary>
        /// Identifier
        /// </summary>
        /// <value>Identifier</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// Possible values:  1: INFORMATION  2: SUCCESSAUDIT  3: FAILUREAUDIT  4: WARNING  5: ERROR 
        /// </summary>
        /// <value>Possible values:  1: INFORMATION  2: SUCCESSAUDIT  3: FAILUREAUDIT  4: WARNING  5: ERROR </value>
        [DataMember(Name="logLevel", EmitDefaultValue=false)]
        public int? LogLevel { get; set; }

        /// <summary>
        /// Message
        /// </summary>
        /// <value>Message</value>
        [DataMember(Name="logMessage", EmitDefaultValue=false)]
        public string LogMessage { get; set; }

        /// <summary>
        /// Creation Date
        /// </summary>
        /// <value>Creation Date</value>
        [DataMember(Name="logDate", EmitDefaultValue=false)]
        public DateTime? LogDate { get; set; }

        /// <summary>
        /// Author
        /// </summary>
        /// <value>Author</value>
        [DataMember(Name="userId", EmitDefaultValue=false)]
        public int? UserId { get; set; }

        /// <summary>
        /// Author Name
        /// </summary>
        /// <value>Author Name</value>
        [DataMember(Name="userNameComplete", EmitDefaultValue=false)]
        public string UserNameComplete { get; set; }

        /// <summary>
        /// Ip Address
        /// </summary>
        /// <value>Ip Address</value>
        [DataMember(Name="ipLogger", EmitDefaultValue=false)]
        public string IpLogger { get; set; }

        /// <summary>
        /// Possible values:  0: Nothing  1: WcfService  2: LogInClient  3: LogOutClient  4: LogInServer  5: LogOutServer  6: LogInSPR  7: LogOutSPR  8: LogInWEB  9: LogOutWEB  10: LogInGeneric  11: LogOutGeneric  12: LogInOCR  13: LogOutOCR  14: WcfServiceDmModuliDelete  15: LogIn  16: LogOut  17: GetDocument  18: SetDocument  19: DmNoteUpdated  20: PluginQueueLogInfo  21: SdAssocDocInserted  22: SdAssocDocDeleted  23: DmBarcodeDeleted  24: DmBarcodeUnMatchProfile  25: DmAllegatiFaxInsertDocument  26: DmDocOpenCheckOut  27: DocumentInsertRelationship  28: RevisioniGetDocument  29: RevisioniDelete  30: DmNpceOutInsert  31: DmNpceOutUpdate  32: DmNpceOutDelete  33: DmAssociazioniInsert  34: DmAllegatiWorkInsert  35: DmProcessDocSetDocumentInEditBuffer  36: DmProcessDocSetDocumentInLine  37: DmProcessDocSetDocumentForProfile  38: DmAllegatiDocInsert  39: DmAllegatiDocUpdate  40: DmAllegatiDocDelete  41: ProfileUpdateProtocollo  42: ProfileDeleted  43: ExternalCall  44: ProfileUndoCheckOut  45: ProfileInserted  46: ProfileLogReaded  47: ProfileUpdate  48: Profile_Field_DocName  49: Profile_Field_Aoo  50: Profile_Field_Numero  51: Profile_Field_DataDoc  52: Profile_Field_Mittente  53: Profile_Field_Destinatario  54: Profile_Field_Cc  55: Profile_Field_CreationDate  56: Profile_Field_Impronta  57: Profile_Field_Device  58: Profile_Field_DataFile  59: Profile_Field_Importante  60: Profile_Field_Revisione  61: Profile_Field_Autore  62: Profile_Field_Protocollo  63: Profile_Field_Anno  64: Profile_Field_Bloccato  65: Profile_Field_Stato  66: Profile_Field_InOut  67: Profile_Field_Scadenza  68: Profile_Field_Flag  69: Profile_Field_WorkFlow  70: Profile_Field_GestRev  71: Profile_Field_EtichettaCd  72: Profile_Field_EtichettaAos  73: Profile_Field_Associazioni  74: Profile_Field_OpenDoc  75: Profile_Field_Allegati  76: Profile_Field_Emergenza  77: Profile_Field_IsAos  78: Profile_Field_EtiReader  79: Profile_Field_ScadAos  80: Profile_Field_Aggiuntivi  81: Profile_Field_DataProt  82: Profile_Field_Compressed  83: ProfileLogMigrated  84: Profile_Field_Originale  85: ProfileSigned  86: ProfileInsertedInFolder  87: ProfileInsertedInFaxOut  88: ProfileInsertedInPratica  89: ProfileInsertedNote  90: LicenseViolated  91: BarcodePrinted  92: WorkflowStarted  93: WorkflowEnded  94: WorkflowEndedForced  95: WorkflowDeleted  96: DmAllegatiDocSignOtpSent  97: DmProfileSignOtpSent  98: ProfileRemovedFromFolder  99: ProfileRemovedFromPratica  100: Dm_Sharing_Insert  101: Dm_Sharing_Update  102: Dm_Sharing_Expiration  103: Dm_Sharing_Read  104: Dm_Sharing_Delete  105: Dm_Sharing_Expiration_NpceOut  106: RemoveDocument  107: Dm_Sharing_Alert  108: Dm_Sharing_MailOut  109: DocumentRemovedFromRelationship  110: DmAssociazioniDelete  111: Dm_Queue_Start  112: Dm_Queue_Change_Progress  113: Dm_Queue_Scheduled  114: Dm_Queue_Terminated  115: Dm_Queue_Cancelled  116: Dm_Queue_Waiting  117: Dm_Queue_Warning  118: Dm_Queue_Info  119: Dm_Instructions_Insert  120: Dm_Instructions_Update  121: Dm_Instructions_Delete  122: Dm_DatiProfilo_Field_Id  123: Dm_DatiProfilo_Field_Valore  124: Dm_DatiProfilo_Field_Contatti  125: Dm_DatiProfilo_Field_Fax  126: Dm_DatiProfilo_Field_Tel  127: Dm_DatiProfilo_Field_Indirizzo  128: Dm_DatiProfilo_Field_Mail  129: Dm_DatiProfilo_Field_Localita  130: Dm_DatiProfilo_Field_Cap  131: Dm_DatiProfilo_Field_Provincia  132: Dm_DatiProfilo_Field_Nazione  133: Dm_DatiProfilo_Field_Contatto  134: Dm_DatiProfilo_Field_Mansione  135: Dm_DatiProfilo_Field_TelNome  136: Dm_DatiProfilo_Field_FaxNome  137: Dm_DatiProfilo_Field_Cell  138: Dm_DatiProfilo_Field_Abitazione  139: Dm_DatiProfilo_Field_Reparto  140: Dm_DatiProfilo_Field_Ufficio  141: Dm_DatiProfilo_Field_Email  142: Dm_DatiProfilo_Field_Riferimento  143: Dm_DatiProfilo_Field_CodFis  144: Dm_DatiProfilo_Field_PartIva  145: Dm_DatiProfilo_Field_Priorita  146: Dm_DatiProfilo_Field_Codice  147: Profile_Field_Senders  148: Dm_Collaboration_Create  149: Dm_Collaboration_ReCollaborate  150: Dm_Collaboration_TakeOff  151: Dm_Collaboration_Delete  152: Profile_Field_DocumentType  153: Profile_Field_Tipo2  154: Profile_Field_Tipo3  155: Dm_Collaboration_Terminate  156: AllegatiDocSigned  157: LogInFailed 
        /// </summary>
        /// <value>Possible values:  0: Nothing  1: WcfService  2: LogInClient  3: LogOutClient  4: LogInServer  5: LogOutServer  6: LogInSPR  7: LogOutSPR  8: LogInWEB  9: LogOutWEB  10: LogInGeneric  11: LogOutGeneric  12: LogInOCR  13: LogOutOCR  14: WcfServiceDmModuliDelete  15: LogIn  16: LogOut  17: GetDocument  18: SetDocument  19: DmNoteUpdated  20: PluginQueueLogInfo  21: SdAssocDocInserted  22: SdAssocDocDeleted  23: DmBarcodeDeleted  24: DmBarcodeUnMatchProfile  25: DmAllegatiFaxInsertDocument  26: DmDocOpenCheckOut  27: DocumentInsertRelationship  28: RevisioniGetDocument  29: RevisioniDelete  30: DmNpceOutInsert  31: DmNpceOutUpdate  32: DmNpceOutDelete  33: DmAssociazioniInsert  34: DmAllegatiWorkInsert  35: DmProcessDocSetDocumentInEditBuffer  36: DmProcessDocSetDocumentInLine  37: DmProcessDocSetDocumentForProfile  38: DmAllegatiDocInsert  39: DmAllegatiDocUpdate  40: DmAllegatiDocDelete  41: ProfileUpdateProtocollo  42: ProfileDeleted  43: ExternalCall  44: ProfileUndoCheckOut  45: ProfileInserted  46: ProfileLogReaded  47: ProfileUpdate  48: Profile_Field_DocName  49: Profile_Field_Aoo  50: Profile_Field_Numero  51: Profile_Field_DataDoc  52: Profile_Field_Mittente  53: Profile_Field_Destinatario  54: Profile_Field_Cc  55: Profile_Field_CreationDate  56: Profile_Field_Impronta  57: Profile_Field_Device  58: Profile_Field_DataFile  59: Profile_Field_Importante  60: Profile_Field_Revisione  61: Profile_Field_Autore  62: Profile_Field_Protocollo  63: Profile_Field_Anno  64: Profile_Field_Bloccato  65: Profile_Field_Stato  66: Profile_Field_InOut  67: Profile_Field_Scadenza  68: Profile_Field_Flag  69: Profile_Field_WorkFlow  70: Profile_Field_GestRev  71: Profile_Field_EtichettaCd  72: Profile_Field_EtichettaAos  73: Profile_Field_Associazioni  74: Profile_Field_OpenDoc  75: Profile_Field_Allegati  76: Profile_Field_Emergenza  77: Profile_Field_IsAos  78: Profile_Field_EtiReader  79: Profile_Field_ScadAos  80: Profile_Field_Aggiuntivi  81: Profile_Field_DataProt  82: Profile_Field_Compressed  83: ProfileLogMigrated  84: Profile_Field_Originale  85: ProfileSigned  86: ProfileInsertedInFolder  87: ProfileInsertedInFaxOut  88: ProfileInsertedInPratica  89: ProfileInsertedNote  90: LicenseViolated  91: BarcodePrinted  92: WorkflowStarted  93: WorkflowEnded  94: WorkflowEndedForced  95: WorkflowDeleted  96: DmAllegatiDocSignOtpSent  97: DmProfileSignOtpSent  98: ProfileRemovedFromFolder  99: ProfileRemovedFromPratica  100: Dm_Sharing_Insert  101: Dm_Sharing_Update  102: Dm_Sharing_Expiration  103: Dm_Sharing_Read  104: Dm_Sharing_Delete  105: Dm_Sharing_Expiration_NpceOut  106: RemoveDocument  107: Dm_Sharing_Alert  108: Dm_Sharing_MailOut  109: DocumentRemovedFromRelationship  110: DmAssociazioniDelete  111: Dm_Queue_Start  112: Dm_Queue_Change_Progress  113: Dm_Queue_Scheduled  114: Dm_Queue_Terminated  115: Dm_Queue_Cancelled  116: Dm_Queue_Waiting  117: Dm_Queue_Warning  118: Dm_Queue_Info  119: Dm_Instructions_Insert  120: Dm_Instructions_Update  121: Dm_Instructions_Delete  122: Dm_DatiProfilo_Field_Id  123: Dm_DatiProfilo_Field_Valore  124: Dm_DatiProfilo_Field_Contatti  125: Dm_DatiProfilo_Field_Fax  126: Dm_DatiProfilo_Field_Tel  127: Dm_DatiProfilo_Field_Indirizzo  128: Dm_DatiProfilo_Field_Mail  129: Dm_DatiProfilo_Field_Localita  130: Dm_DatiProfilo_Field_Cap  131: Dm_DatiProfilo_Field_Provincia  132: Dm_DatiProfilo_Field_Nazione  133: Dm_DatiProfilo_Field_Contatto  134: Dm_DatiProfilo_Field_Mansione  135: Dm_DatiProfilo_Field_TelNome  136: Dm_DatiProfilo_Field_FaxNome  137: Dm_DatiProfilo_Field_Cell  138: Dm_DatiProfilo_Field_Abitazione  139: Dm_DatiProfilo_Field_Reparto  140: Dm_DatiProfilo_Field_Ufficio  141: Dm_DatiProfilo_Field_Email  142: Dm_DatiProfilo_Field_Riferimento  143: Dm_DatiProfilo_Field_CodFis  144: Dm_DatiProfilo_Field_PartIva  145: Dm_DatiProfilo_Field_Priorita  146: Dm_DatiProfilo_Field_Codice  147: Profile_Field_Senders  148: Dm_Collaboration_Create  149: Dm_Collaboration_ReCollaborate  150: Dm_Collaboration_TakeOff  151: Dm_Collaboration_Delete  152: Profile_Field_DocumentType  153: Profile_Field_Tipo2  154: Profile_Field_Tipo3  155: Dm_Collaboration_Terminate  156: AllegatiDocSigned  157: LogInFailed </value>
        [DataMember(Name="infoType", EmitDefaultValue=false)]
        public int? InfoType { get; set; }

        /// <summary>
        /// Message Type
        /// </summary>
        /// <value>Message Type</value>
        [DataMember(Name="infoTypeMessage", EmitDefaultValue=false)]
        public string InfoTypeMessage { get; set; }

        /// <summary>
        /// Information in integer format
        /// </summary>
        /// <value>Information in integer format</value>
        [DataMember(Name="infoInt", EmitDefaultValue=false)]
        public int? InfoInt { get; set; }

        /// <summary>
        /// Session Identifier
        /// </summary>
        /// <value>Session Identifier</value>
        [DataMember(Name="sessionId", EmitDefaultValue=false)]
        public string SessionId { get; set; }

        /// <summary>
        /// Software Name
        /// </summary>
        /// <value>Software Name</value>
        [DataMember(Name="softwareName", EmitDefaultValue=false)]
        public string SoftwareName { get; set; }

        /// <summary>
        /// Software Type
        /// </summary>
        /// <value>Software Type</value>
        [DataMember(Name="softwareType", EmitDefaultValue=false)]
        public string SoftwareType { get; set; }

        /// <summary>
        /// Information in string format
        /// </summary>
        /// <value>Information in string format</value>
        [DataMember(Name="infoString", EmitDefaultValue=false)]
        public string InfoString { get; set; }

        /// <summary>
        /// Identifier of the reference object
        /// </summary>
        /// <value>Identifier of the reference object</value>
        [DataMember(Name="parentId", EmitDefaultValue=false)]
        public string ParentId { get; set; }

        /// <summary>
        /// Possible values:  0: None  1: Profile  2: Sharing  3: Queue  4: Instruction  5: Collaboration 
        /// </summary>
        /// <value>Possible values:  0: None  1: Profile  2: Sharing  3: Queue  4: Instruction  5: Collaboration </value>
        [DataMember(Name="logKind", EmitDefaultValue=false)]
        public int? LogKind { get; set; }

        /// <summary>
        /// Integer for Deleting Rules
        /// </summary>
        /// <value>Integer for Deleting Rules</value>
        [DataMember(Name="historyInt", EmitDefaultValue=false)]
        public int? HistoryInt { get; set; }

        /// <summary>
        /// String for Deleting Rules
        /// </summary>
        /// <value>String for Deleting Rules</value>
        [DataMember(Name="historyString", EmitDefaultValue=false)]
        public string HistoryString { get; set; }

        /// <summary>
        /// Sublevel Items
        /// </summary>
        /// <value>Sublevel Items</value>
        [DataMember(Name="childs", EmitDefaultValue=false)]
        public List<LogDTO> Childs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LogDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LogLevel: ").Append(LogLevel).Append("\n");
            sb.Append("  LogMessage: ").Append(LogMessage).Append("\n");
            sb.Append("  LogDate: ").Append(LogDate).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  UserNameComplete: ").Append(UserNameComplete).Append("\n");
            sb.Append("  IpLogger: ").Append(IpLogger).Append("\n");
            sb.Append("  InfoType: ").Append(InfoType).Append("\n");
            sb.Append("  InfoTypeMessage: ").Append(InfoTypeMessage).Append("\n");
            sb.Append("  InfoInt: ").Append(InfoInt).Append("\n");
            sb.Append("  SessionId: ").Append(SessionId).Append("\n");
            sb.Append("  SoftwareName: ").Append(SoftwareName).Append("\n");
            sb.Append("  SoftwareType: ").Append(SoftwareType).Append("\n");
            sb.Append("  InfoString: ").Append(InfoString).Append("\n");
            sb.Append("  ParentId: ").Append(ParentId).Append("\n");
            sb.Append("  LogKind: ").Append(LogKind).Append("\n");
            sb.Append("  HistoryInt: ").Append(HistoryInt).Append("\n");
            sb.Append("  HistoryString: ").Append(HistoryString).Append("\n");
            sb.Append("  Childs: ").Append(Childs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LogDTO);
        }

        /// <summary>
        /// Returns true if LogDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of LogDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LogDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.LogLevel == input.LogLevel ||
                    (this.LogLevel != null &&
                    this.LogLevel.Equals(input.LogLevel))
                ) && 
                (
                    this.LogMessage == input.LogMessage ||
                    (this.LogMessage != null &&
                    this.LogMessage.Equals(input.LogMessage))
                ) && 
                (
                    this.LogDate == input.LogDate ||
                    (this.LogDate != null &&
                    this.LogDate.Equals(input.LogDate))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                ) && 
                (
                    this.UserNameComplete == input.UserNameComplete ||
                    (this.UserNameComplete != null &&
                    this.UserNameComplete.Equals(input.UserNameComplete))
                ) && 
                (
                    this.IpLogger == input.IpLogger ||
                    (this.IpLogger != null &&
                    this.IpLogger.Equals(input.IpLogger))
                ) && 
                (
                    this.InfoType == input.InfoType ||
                    (this.InfoType != null &&
                    this.InfoType.Equals(input.InfoType))
                ) && 
                (
                    this.InfoTypeMessage == input.InfoTypeMessage ||
                    (this.InfoTypeMessage != null &&
                    this.InfoTypeMessage.Equals(input.InfoTypeMessage))
                ) && 
                (
                    this.InfoInt == input.InfoInt ||
                    (this.InfoInt != null &&
                    this.InfoInt.Equals(input.InfoInt))
                ) && 
                (
                    this.SessionId == input.SessionId ||
                    (this.SessionId != null &&
                    this.SessionId.Equals(input.SessionId))
                ) && 
                (
                    this.SoftwareName == input.SoftwareName ||
                    (this.SoftwareName != null &&
                    this.SoftwareName.Equals(input.SoftwareName))
                ) && 
                (
                    this.SoftwareType == input.SoftwareType ||
                    (this.SoftwareType != null &&
                    this.SoftwareType.Equals(input.SoftwareType))
                ) && 
                (
                    this.InfoString == input.InfoString ||
                    (this.InfoString != null &&
                    this.InfoString.Equals(input.InfoString))
                ) && 
                (
                    this.ParentId == input.ParentId ||
                    (this.ParentId != null &&
                    this.ParentId.Equals(input.ParentId))
                ) && 
                (
                    this.LogKind == input.LogKind ||
                    (this.LogKind != null &&
                    this.LogKind.Equals(input.LogKind))
                ) && 
                (
                    this.HistoryInt == input.HistoryInt ||
                    (this.HistoryInt != null &&
                    this.HistoryInt.Equals(input.HistoryInt))
                ) && 
                (
                    this.HistoryString == input.HistoryString ||
                    (this.HistoryString != null &&
                    this.HistoryString.Equals(input.HistoryString))
                ) && 
                (
                    this.Childs == input.Childs ||
                    this.Childs != null &&
                    this.Childs.SequenceEqual(input.Childs)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LogLevel != null)
                    hashCode = hashCode * 59 + this.LogLevel.GetHashCode();
                if (this.LogMessage != null)
                    hashCode = hashCode * 59 + this.LogMessage.GetHashCode();
                if (this.LogDate != null)
                    hashCode = hashCode * 59 + this.LogDate.GetHashCode();
                if (this.UserId != null)
                    hashCode = hashCode * 59 + this.UserId.GetHashCode();
                if (this.UserNameComplete != null)
                    hashCode = hashCode * 59 + this.UserNameComplete.GetHashCode();
                if (this.IpLogger != null)
                    hashCode = hashCode * 59 + this.IpLogger.GetHashCode();
                if (this.InfoType != null)
                    hashCode = hashCode * 59 + this.InfoType.GetHashCode();
                if (this.InfoTypeMessage != null)
                    hashCode = hashCode * 59 + this.InfoTypeMessage.GetHashCode();
                if (this.InfoInt != null)
                    hashCode = hashCode * 59 + this.InfoInt.GetHashCode();
                if (this.SessionId != null)
                    hashCode = hashCode * 59 + this.SessionId.GetHashCode();
                if (this.SoftwareName != null)
                    hashCode = hashCode * 59 + this.SoftwareName.GetHashCode();
                if (this.SoftwareType != null)
                    hashCode = hashCode * 59 + this.SoftwareType.GetHashCode();
                if (this.InfoString != null)
                    hashCode = hashCode * 59 + this.InfoString.GetHashCode();
                if (this.ParentId != null)
                    hashCode = hashCode * 59 + this.ParentId.GetHashCode();
                if (this.LogKind != null)
                    hashCode = hashCode * 59 + this.LogKind.GetHashCode();
                if (this.HistoryInt != null)
                    hashCode = hashCode * 59 + this.HistoryInt.GetHashCode();
                if (this.HistoryString != null)
                    hashCode = hashCode * 59 + this.HistoryString.GetHashCode();
                if (this.Childs != null)
                    hashCode = hashCode * 59 + this.Childs.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
