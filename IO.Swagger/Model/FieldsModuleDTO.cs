/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// FieldsModuleDTO
    /// </summary>
    [DataContract]
    public partial class FieldsModuleDTO :  IEquatable<FieldsModuleDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FieldsModuleDTO" /> class.
        /// </summary>
        /// <param name="ProfileField">Nome del campo di profilo..</param>
        /// <param name="Label">Etichetta dell&#39;associazione..</param>
        /// <param name="ModelField">Nome del campo nel modello office..</param>
        /// <param name="Type1">Classe documentale di primo livello..</param>
        /// <param name="Type2">Classe documentale di secondo livello..</param>
        /// <param name="Type3">Classe documentale di terso livello..</param>
        /// <param name="IdModel">Identificativo del modello office di riferimento..</param>
        /// <param name="FieldsMatrixModule">FieldsMatrixModule.</param>
        public FieldsModuleDTO(string ProfileField = null, string Label = null, string ModelField = null, int? Type1 = null, int? Type2 = null, int? Type3 = null, int? IdModel = null, List<FieldsMatrixModuleDTO> FieldsMatrixModule = null)
        {
            this.ProfileField = ProfileField;
            this.Label = Label;
            this.ModelField = ModelField;
            this.Type1 = Type1;
            this.Type2 = Type2;
            this.Type3 = Type3;
            this.IdModel = IdModel;
            this.FieldsMatrixModule = FieldsMatrixModule;
        }
        
        /// <summary>
        /// Nome del campo di profilo.
        /// </summary>
        /// <value>Nome del campo di profilo.</value>
        [DataMember(Name="profileField", EmitDefaultValue=false)]
        public string ProfileField { get; set; }
        /// <summary>
        /// Etichetta dell&#39;associazione.
        /// </summary>
        /// <value>Etichetta dell&#39;associazione.</value>
        [DataMember(Name="label", EmitDefaultValue=false)]
        public string Label { get; set; }
        /// <summary>
        /// Nome del campo nel modello office.
        /// </summary>
        /// <value>Nome del campo nel modello office.</value>
        [DataMember(Name="modelField", EmitDefaultValue=false)]
        public string ModelField { get; set; }
        /// <summary>
        /// Classe documentale di primo livello.
        /// </summary>
        /// <value>Classe documentale di primo livello.</value>
        [DataMember(Name="type1", EmitDefaultValue=false)]
        public int? Type1 { get; set; }
        /// <summary>
        /// Classe documentale di secondo livello.
        /// </summary>
        /// <value>Classe documentale di secondo livello.</value>
        [DataMember(Name="type2", EmitDefaultValue=false)]
        public int? Type2 { get; set; }
        /// <summary>
        /// Classe documentale di terso livello.
        /// </summary>
        /// <value>Classe documentale di terso livello.</value>
        [DataMember(Name="type3", EmitDefaultValue=false)]
        public int? Type3 { get; set; }
        /// <summary>
        /// Identificativo del modello office di riferimento.
        /// </summary>
        /// <value>Identificativo del modello office di riferimento.</value>
        [DataMember(Name="idModel", EmitDefaultValue=false)]
        public int? IdModel { get; set; }
        /// <summary>
        /// Gets or Sets FieldsMatrixModule
        /// </summary>
        [DataMember(Name="fieldsMatrixModule", EmitDefaultValue=false)]
        public List<FieldsMatrixModuleDTO> FieldsMatrixModule { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class FieldsModuleDTO {\n");
            sb.Append("  ProfileField: ").Append(ProfileField).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  ModelField: ").Append(ModelField).Append("\n");
            sb.Append("  Type1: ").Append(Type1).Append("\n");
            sb.Append("  Type2: ").Append(Type2).Append("\n");
            sb.Append("  Type3: ").Append(Type3).Append("\n");
            sb.Append("  IdModel: ").Append(IdModel).Append("\n");
            sb.Append("  FieldsMatrixModule: ").Append(FieldsMatrixModule).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as FieldsModuleDTO);
        }

        /// <summary>
        /// Returns true if FieldsModuleDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of FieldsModuleDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(FieldsModuleDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ProfileField == other.ProfileField ||
                    this.ProfileField != null &&
                    this.ProfileField.Equals(other.ProfileField)
                ) && 
                (
                    this.Label == other.Label ||
                    this.Label != null &&
                    this.Label.Equals(other.Label)
                ) && 
                (
                    this.ModelField == other.ModelField ||
                    this.ModelField != null &&
                    this.ModelField.Equals(other.ModelField)
                ) && 
                (
                    this.Type1 == other.Type1 ||
                    this.Type1 != null &&
                    this.Type1.Equals(other.Type1)
                ) && 
                (
                    this.Type2 == other.Type2 ||
                    this.Type2 != null &&
                    this.Type2.Equals(other.Type2)
                ) && 
                (
                    this.Type3 == other.Type3 ||
                    this.Type3 != null &&
                    this.Type3.Equals(other.Type3)
                ) && 
                (
                    this.IdModel == other.IdModel ||
                    this.IdModel != null &&
                    this.IdModel.Equals(other.IdModel)
                ) && 
                (
                    this.FieldsMatrixModule == other.FieldsMatrixModule ||
                    this.FieldsMatrixModule != null &&
                    this.FieldsMatrixModule.SequenceEqual(other.FieldsMatrixModule)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ProfileField != null)
                    hash = hash * 59 + this.ProfileField.GetHashCode();
                if (this.Label != null)
                    hash = hash * 59 + this.Label.GetHashCode();
                if (this.ModelField != null)
                    hash = hash * 59 + this.ModelField.GetHashCode();
                if (this.Type1 != null)
                    hash = hash * 59 + this.Type1.GetHashCode();
                if (this.Type2 != null)
                    hash = hash * 59 + this.Type2.GetHashCode();
                if (this.Type3 != null)
                    hash = hash * 59 + this.Type3.GetHashCode();
                if (this.IdModel != null)
                    hash = hash * 59 + this.IdModel.GetHashCode();
                if (this.FieldsMatrixModule != null)
                    hash = hash * 59 + this.FieldsMatrixModule.GetHashCode();
                return hash;
            }
        }
    }

}
