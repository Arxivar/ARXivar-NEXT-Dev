/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// LicenseCustomer
    /// </summary>
    [DataContract]
    public partial class LicenseCustomer :  IEquatable<LicenseCustomer>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LicenseCustomer" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="specification">specification.</param>
        /// <param name="piva">piva.</param>
        /// <param name="codFiscale">codFiscale.</param>
        /// <param name="rivenditoriList">rivenditoriList.</param>
        public LicenseCustomer(string name = default(string), string specification = default(string), string piva = default(string), string codFiscale = default(string), List<string> rivenditoriList = default(List<string>))
        {
            this.Name = name;
            this.Specification = specification;
            this.Piva = piva;
            this.CodFiscale = codFiscale;
            this.RivenditoriList = rivenditoriList;
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Specification
        /// </summary>
        [DataMember(Name="specification", EmitDefaultValue=false)]
        public string Specification { get; set; }

        /// <summary>
        /// Gets or Sets Piva
        /// </summary>
        [DataMember(Name="piva", EmitDefaultValue=false)]
        public string Piva { get; set; }

        /// <summary>
        /// Gets or Sets CodFiscale
        /// </summary>
        [DataMember(Name="codFiscale", EmitDefaultValue=false)]
        public string CodFiscale { get; set; }

        /// <summary>
        /// Gets or Sets RivenditoriList
        /// </summary>
        [DataMember(Name="rivenditoriList", EmitDefaultValue=false)]
        public List<string> RivenditoriList { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LicenseCustomer {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Specification: ").Append(Specification).Append("\n");
            sb.Append("  Piva: ").Append(Piva).Append("\n");
            sb.Append("  CodFiscale: ").Append(CodFiscale).Append("\n");
            sb.Append("  RivenditoriList: ").Append(RivenditoriList).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LicenseCustomer);
        }

        /// <summary>
        /// Returns true if LicenseCustomer instances are equal
        /// </summary>
        /// <param name="input">Instance of LicenseCustomer to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LicenseCustomer input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Specification == input.Specification ||
                    (this.Specification != null &&
                    this.Specification.Equals(input.Specification))
                ) && 
                (
                    this.Piva == input.Piva ||
                    (this.Piva != null &&
                    this.Piva.Equals(input.Piva))
                ) && 
                (
                    this.CodFiscale == input.CodFiscale ||
                    (this.CodFiscale != null &&
                    this.CodFiscale.Equals(input.CodFiscale))
                ) && 
                (
                    this.RivenditoriList == input.RivenditoriList ||
                    this.RivenditoriList != null &&
                    this.RivenditoriList.SequenceEqual(input.RivenditoriList)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Specification != null)
                    hashCode = hashCode * 59 + this.Specification.GetHashCode();
                if (this.Piva != null)
                    hashCode = hashCode * 59 + this.Piva.GetHashCode();
                if (this.CodFiscale != null)
                    hashCode = hashCode * 59 + this.CodFiscale.GetHashCode();
                if (this.RivenditoriList != null)
                    hashCode = hashCode * 59 + this.RivenditoriList.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
