/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// JoinDmDatiProfilo
    /// </summary>
    [DataContract]
    public partial class JoinDmDatiProfilo :  IEquatable<JoinDmDatiProfilo>
    {
        /// <summary>
        /// Gets or Sets JoinMode
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum JoinModeEnum
        {
            
            /// <summary>
            /// Enum INNER for "INNER"
            /// </summary>
            [EnumMember(Value = "INNER")]
            INNER,
            
            /// <summary>
            /// Enum LEFT for "LEFT"
            /// </summary>
            [EnumMember(Value = "LEFT")]
            LEFT,
            
            /// <summary>
            /// Enum RIGHT for "RIGHT"
            /// </summary>
            [EnumMember(Value = "RIGHT")]
            RIGHT
        }

        /// <summary>
        /// Gets or Sets JoinMode
        /// </summary>
        [DataMember(Name="joinMode", EmitDefaultValue=false)]
        public JoinModeEnum? JoinMode { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="JoinDmDatiProfilo" /> class.
        /// </summary>
        /// <param name="LegameTabella">LegameTabella.</param>
        /// <param name="Id">Id.</param>
        /// <param name="Docnumber">Docnumber.</param>
        /// <param name="Campo">Campo.</param>
        /// <param name="Valore">Valore.</param>
        /// <param name="Contatti">Contatti.</param>
        /// <param name="Fax">Fax.</param>
        /// <param name="Tel">Tel.</param>
        /// <param name="Indirizzo">Indirizzo.</param>
        /// <param name="Mail">Mail.</param>
        /// <param name="Localita">Localita.</param>
        /// <param name="Cap">Cap.</param>
        /// <param name="Provincia">Provincia.</param>
        /// <param name="Nazione">Nazione.</param>
        /// <param name="Codice">Codice.</param>
        /// <param name="Contatto">Contatto.</param>
        /// <param name="Mansione">Mansione.</param>
        /// <param name="Telnome">Telnome.</param>
        /// <param name="Faxnome">Faxnome.</param>
        /// <param name="Cell">Cell.</param>
        /// <param name="Abitazione">Abitazione.</param>
        /// <param name="Reparto">Reparto.</param>
        /// <param name="Ufficio">Ufficio.</param>
        /// <param name="Email">Email.</param>
        /// <param name="Riferimento">Riferimento.</param>
        /// <param name="Codfis">Codfis.</param>
        /// <param name="Partiva">Partiva.</param>
        /// <param name="Priorita">Priorita.</param>
        /// <param name="Idrubrica">Idrubrica.</param>
        /// <param name="Idcontatto">Idcontatto.</param>
        /// <param name="ForceCaseInsensitive">ForceCaseInsensitive.</param>
        /// <param name="JoinMode">JoinMode.</param>
        /// <param name="NomeTabella">NomeTabella.</param>
        public JoinDmDatiProfilo(string LegameTabella = null, FieldInt Id = null, FieldInt Docnumber = null, FieldString Campo = null, FieldString Valore = null, FieldString Contatti = null, FieldString Fax = null, FieldString Tel = null, FieldString Indirizzo = null, FieldString Mail = null, FieldString Localita = null, FieldString Cap = null, FieldString Provincia = null, FieldString Nazione = null, FieldString Codice = null, FieldString Contatto = null, FieldString Mansione = null, FieldString Telnome = null, FieldString Faxnome = null, FieldString Cell = null, FieldString Abitazione = null, FieldString Reparto = null, FieldString Ufficio = null, FieldString Email = null, FieldString Riferimento = null, FieldString Codfis = null, FieldString Partiva = null, FieldString Priorita = null, FieldInt Idrubrica = null, FieldInt Idcontatto = null, bool? ForceCaseInsensitive = null, JoinModeEnum? JoinMode = null, string NomeTabella = null)
        {
            this.LegameTabella = LegameTabella;
            this.Id = Id;
            this.Docnumber = Docnumber;
            this.Campo = Campo;
            this.Valore = Valore;
            this.Contatti = Contatti;
            this.Fax = Fax;
            this.Tel = Tel;
            this.Indirizzo = Indirizzo;
            this.Mail = Mail;
            this.Localita = Localita;
            this.Cap = Cap;
            this.Provincia = Provincia;
            this.Nazione = Nazione;
            this.Codice = Codice;
            this.Contatto = Contatto;
            this.Mansione = Mansione;
            this.Telnome = Telnome;
            this.Faxnome = Faxnome;
            this.Cell = Cell;
            this.Abitazione = Abitazione;
            this.Reparto = Reparto;
            this.Ufficio = Ufficio;
            this.Email = Email;
            this.Riferimento = Riferimento;
            this.Codfis = Codfis;
            this.Partiva = Partiva;
            this.Priorita = Priorita;
            this.Idrubrica = Idrubrica;
            this.Idcontatto = Idcontatto;
            this.ForceCaseInsensitive = ForceCaseInsensitive;
            this.JoinMode = JoinMode;
            this.NomeTabella = NomeTabella;
        }
        
        /// <summary>
        /// Gets or Sets LegameTabella
        /// </summary>
        [DataMember(Name="legameTabella", EmitDefaultValue=false)]
        public string LegameTabella { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public FieldInt Id { get; set; }
        /// <summary>
        /// Gets or Sets Docnumber
        /// </summary>
        [DataMember(Name="docnumber", EmitDefaultValue=false)]
        public FieldInt Docnumber { get; set; }
        /// <summary>
        /// Gets or Sets Campo
        /// </summary>
        [DataMember(Name="campo", EmitDefaultValue=false)]
        public FieldString Campo { get; set; }
        /// <summary>
        /// Gets or Sets Valore
        /// </summary>
        [DataMember(Name="valore", EmitDefaultValue=false)]
        public FieldString Valore { get; set; }
        /// <summary>
        /// Gets or Sets Contatti
        /// </summary>
        [DataMember(Name="contatti", EmitDefaultValue=false)]
        public FieldString Contatti { get; set; }
        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public FieldString Fax { get; set; }
        /// <summary>
        /// Gets or Sets Tel
        /// </summary>
        [DataMember(Name="tel", EmitDefaultValue=false)]
        public FieldString Tel { get; set; }
        /// <summary>
        /// Gets or Sets Indirizzo
        /// </summary>
        [DataMember(Name="indirizzo", EmitDefaultValue=false)]
        public FieldString Indirizzo { get; set; }
        /// <summary>
        /// Gets or Sets Mail
        /// </summary>
        [DataMember(Name="mail", EmitDefaultValue=false)]
        public FieldString Mail { get; set; }
        /// <summary>
        /// Gets or Sets Localita
        /// </summary>
        [DataMember(Name="localita", EmitDefaultValue=false)]
        public FieldString Localita { get; set; }
        /// <summary>
        /// Gets or Sets Cap
        /// </summary>
        [DataMember(Name="cap", EmitDefaultValue=false)]
        public FieldString Cap { get; set; }
        /// <summary>
        /// Gets or Sets Provincia
        /// </summary>
        [DataMember(Name="provincia", EmitDefaultValue=false)]
        public FieldString Provincia { get; set; }
        /// <summary>
        /// Gets or Sets Nazione
        /// </summary>
        [DataMember(Name="nazione", EmitDefaultValue=false)]
        public FieldString Nazione { get; set; }
        /// <summary>
        /// Gets or Sets Codice
        /// </summary>
        [DataMember(Name="codice", EmitDefaultValue=false)]
        public FieldString Codice { get; set; }
        /// <summary>
        /// Gets or Sets Contatto
        /// </summary>
        [DataMember(Name="contatto", EmitDefaultValue=false)]
        public FieldString Contatto { get; set; }
        /// <summary>
        /// Gets or Sets Mansione
        /// </summary>
        [DataMember(Name="mansione", EmitDefaultValue=false)]
        public FieldString Mansione { get; set; }
        /// <summary>
        /// Gets or Sets Telnome
        /// </summary>
        [DataMember(Name="telnome", EmitDefaultValue=false)]
        public FieldString Telnome { get; set; }
        /// <summary>
        /// Gets or Sets Faxnome
        /// </summary>
        [DataMember(Name="faxnome", EmitDefaultValue=false)]
        public FieldString Faxnome { get; set; }
        /// <summary>
        /// Gets or Sets Cell
        /// </summary>
        [DataMember(Name="cell", EmitDefaultValue=false)]
        public FieldString Cell { get; set; }
        /// <summary>
        /// Gets or Sets Abitazione
        /// </summary>
        [DataMember(Name="abitazione", EmitDefaultValue=false)]
        public FieldString Abitazione { get; set; }
        /// <summary>
        /// Gets or Sets Reparto
        /// </summary>
        [DataMember(Name="reparto", EmitDefaultValue=false)]
        public FieldString Reparto { get; set; }
        /// <summary>
        /// Gets or Sets Ufficio
        /// </summary>
        [DataMember(Name="ufficio", EmitDefaultValue=false)]
        public FieldString Ufficio { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public FieldString Email { get; set; }
        /// <summary>
        /// Gets or Sets Riferimento
        /// </summary>
        [DataMember(Name="riferimento", EmitDefaultValue=false)]
        public FieldString Riferimento { get; set; }
        /// <summary>
        /// Gets or Sets Codfis
        /// </summary>
        [DataMember(Name="codfis", EmitDefaultValue=false)]
        public FieldString Codfis { get; set; }
        /// <summary>
        /// Gets or Sets Partiva
        /// </summary>
        [DataMember(Name="partiva", EmitDefaultValue=false)]
        public FieldString Partiva { get; set; }
        /// <summary>
        /// Gets or Sets Priorita
        /// </summary>
        [DataMember(Name="priorita", EmitDefaultValue=false)]
        public FieldString Priorita { get; set; }
        /// <summary>
        /// Gets or Sets Idrubrica
        /// </summary>
        [DataMember(Name="idrubrica", EmitDefaultValue=false)]
        public FieldInt Idrubrica { get; set; }
        /// <summary>
        /// Gets or Sets Idcontatto
        /// </summary>
        [DataMember(Name="idcontatto", EmitDefaultValue=false)]
        public FieldInt Idcontatto { get; set; }
        /// <summary>
        /// Gets or Sets ForceCaseInsensitive
        /// </summary>
        [DataMember(Name="forceCaseInsensitive", EmitDefaultValue=false)]
        public bool? ForceCaseInsensitive { get; set; }
        /// <summary>
        /// Gets or Sets NomeTabella
        /// </summary>
        [DataMember(Name="nomeTabella", EmitDefaultValue=false)]
        public string NomeTabella { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JoinDmDatiProfilo {\n");
            sb.Append("  LegameTabella: ").Append(LegameTabella).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Docnumber: ").Append(Docnumber).Append("\n");
            sb.Append("  Campo: ").Append(Campo).Append("\n");
            sb.Append("  Valore: ").Append(Valore).Append("\n");
            sb.Append("  Contatti: ").Append(Contatti).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Tel: ").Append(Tel).Append("\n");
            sb.Append("  Indirizzo: ").Append(Indirizzo).Append("\n");
            sb.Append("  Mail: ").Append(Mail).Append("\n");
            sb.Append("  Localita: ").Append(Localita).Append("\n");
            sb.Append("  Cap: ").Append(Cap).Append("\n");
            sb.Append("  Provincia: ").Append(Provincia).Append("\n");
            sb.Append("  Nazione: ").Append(Nazione).Append("\n");
            sb.Append("  Codice: ").Append(Codice).Append("\n");
            sb.Append("  Contatto: ").Append(Contatto).Append("\n");
            sb.Append("  Mansione: ").Append(Mansione).Append("\n");
            sb.Append("  Telnome: ").Append(Telnome).Append("\n");
            sb.Append("  Faxnome: ").Append(Faxnome).Append("\n");
            sb.Append("  Cell: ").Append(Cell).Append("\n");
            sb.Append("  Abitazione: ").Append(Abitazione).Append("\n");
            sb.Append("  Reparto: ").Append(Reparto).Append("\n");
            sb.Append("  Ufficio: ").Append(Ufficio).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Riferimento: ").Append(Riferimento).Append("\n");
            sb.Append("  Codfis: ").Append(Codfis).Append("\n");
            sb.Append("  Partiva: ").Append(Partiva).Append("\n");
            sb.Append("  Priorita: ").Append(Priorita).Append("\n");
            sb.Append("  Idrubrica: ").Append(Idrubrica).Append("\n");
            sb.Append("  Idcontatto: ").Append(Idcontatto).Append("\n");
            sb.Append("  ForceCaseInsensitive: ").Append(ForceCaseInsensitive).Append("\n");
            sb.Append("  JoinMode: ").Append(JoinMode).Append("\n");
            sb.Append("  NomeTabella: ").Append(NomeTabella).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as JoinDmDatiProfilo);
        }

        /// <summary>
        /// Returns true if JoinDmDatiProfilo instances are equal
        /// </summary>
        /// <param name="other">Instance of JoinDmDatiProfilo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JoinDmDatiProfilo other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.LegameTabella == other.LegameTabella ||
                    this.LegameTabella != null &&
                    this.LegameTabella.Equals(other.LegameTabella)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Docnumber == other.Docnumber ||
                    this.Docnumber != null &&
                    this.Docnumber.Equals(other.Docnumber)
                ) && 
                (
                    this.Campo == other.Campo ||
                    this.Campo != null &&
                    this.Campo.Equals(other.Campo)
                ) && 
                (
                    this.Valore == other.Valore ||
                    this.Valore != null &&
                    this.Valore.Equals(other.Valore)
                ) && 
                (
                    this.Contatti == other.Contatti ||
                    this.Contatti != null &&
                    this.Contatti.Equals(other.Contatti)
                ) && 
                (
                    this.Fax == other.Fax ||
                    this.Fax != null &&
                    this.Fax.Equals(other.Fax)
                ) && 
                (
                    this.Tel == other.Tel ||
                    this.Tel != null &&
                    this.Tel.Equals(other.Tel)
                ) && 
                (
                    this.Indirizzo == other.Indirizzo ||
                    this.Indirizzo != null &&
                    this.Indirizzo.Equals(other.Indirizzo)
                ) && 
                (
                    this.Mail == other.Mail ||
                    this.Mail != null &&
                    this.Mail.Equals(other.Mail)
                ) && 
                (
                    this.Localita == other.Localita ||
                    this.Localita != null &&
                    this.Localita.Equals(other.Localita)
                ) && 
                (
                    this.Cap == other.Cap ||
                    this.Cap != null &&
                    this.Cap.Equals(other.Cap)
                ) && 
                (
                    this.Provincia == other.Provincia ||
                    this.Provincia != null &&
                    this.Provincia.Equals(other.Provincia)
                ) && 
                (
                    this.Nazione == other.Nazione ||
                    this.Nazione != null &&
                    this.Nazione.Equals(other.Nazione)
                ) && 
                (
                    this.Codice == other.Codice ||
                    this.Codice != null &&
                    this.Codice.Equals(other.Codice)
                ) && 
                (
                    this.Contatto == other.Contatto ||
                    this.Contatto != null &&
                    this.Contatto.Equals(other.Contatto)
                ) && 
                (
                    this.Mansione == other.Mansione ||
                    this.Mansione != null &&
                    this.Mansione.Equals(other.Mansione)
                ) && 
                (
                    this.Telnome == other.Telnome ||
                    this.Telnome != null &&
                    this.Telnome.Equals(other.Telnome)
                ) && 
                (
                    this.Faxnome == other.Faxnome ||
                    this.Faxnome != null &&
                    this.Faxnome.Equals(other.Faxnome)
                ) && 
                (
                    this.Cell == other.Cell ||
                    this.Cell != null &&
                    this.Cell.Equals(other.Cell)
                ) && 
                (
                    this.Abitazione == other.Abitazione ||
                    this.Abitazione != null &&
                    this.Abitazione.Equals(other.Abitazione)
                ) && 
                (
                    this.Reparto == other.Reparto ||
                    this.Reparto != null &&
                    this.Reparto.Equals(other.Reparto)
                ) && 
                (
                    this.Ufficio == other.Ufficio ||
                    this.Ufficio != null &&
                    this.Ufficio.Equals(other.Ufficio)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.Riferimento == other.Riferimento ||
                    this.Riferimento != null &&
                    this.Riferimento.Equals(other.Riferimento)
                ) && 
                (
                    this.Codfis == other.Codfis ||
                    this.Codfis != null &&
                    this.Codfis.Equals(other.Codfis)
                ) && 
                (
                    this.Partiva == other.Partiva ||
                    this.Partiva != null &&
                    this.Partiva.Equals(other.Partiva)
                ) && 
                (
                    this.Priorita == other.Priorita ||
                    this.Priorita != null &&
                    this.Priorita.Equals(other.Priorita)
                ) && 
                (
                    this.Idrubrica == other.Idrubrica ||
                    this.Idrubrica != null &&
                    this.Idrubrica.Equals(other.Idrubrica)
                ) && 
                (
                    this.Idcontatto == other.Idcontatto ||
                    this.Idcontatto != null &&
                    this.Idcontatto.Equals(other.Idcontatto)
                ) && 
                (
                    this.ForceCaseInsensitive == other.ForceCaseInsensitive ||
                    this.ForceCaseInsensitive != null &&
                    this.ForceCaseInsensitive.Equals(other.ForceCaseInsensitive)
                ) && 
                (
                    this.JoinMode == other.JoinMode ||
                    this.JoinMode != null &&
                    this.JoinMode.Equals(other.JoinMode)
                ) && 
                (
                    this.NomeTabella == other.NomeTabella ||
                    this.NomeTabella != null &&
                    this.NomeTabella.Equals(other.NomeTabella)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.LegameTabella != null)
                    hash = hash * 59 + this.LegameTabella.GetHashCode();
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Docnumber != null)
                    hash = hash * 59 + this.Docnumber.GetHashCode();
                if (this.Campo != null)
                    hash = hash * 59 + this.Campo.GetHashCode();
                if (this.Valore != null)
                    hash = hash * 59 + this.Valore.GetHashCode();
                if (this.Contatti != null)
                    hash = hash * 59 + this.Contatti.GetHashCode();
                if (this.Fax != null)
                    hash = hash * 59 + this.Fax.GetHashCode();
                if (this.Tel != null)
                    hash = hash * 59 + this.Tel.GetHashCode();
                if (this.Indirizzo != null)
                    hash = hash * 59 + this.Indirizzo.GetHashCode();
                if (this.Mail != null)
                    hash = hash * 59 + this.Mail.GetHashCode();
                if (this.Localita != null)
                    hash = hash * 59 + this.Localita.GetHashCode();
                if (this.Cap != null)
                    hash = hash * 59 + this.Cap.GetHashCode();
                if (this.Provincia != null)
                    hash = hash * 59 + this.Provincia.GetHashCode();
                if (this.Nazione != null)
                    hash = hash * 59 + this.Nazione.GetHashCode();
                if (this.Codice != null)
                    hash = hash * 59 + this.Codice.GetHashCode();
                if (this.Contatto != null)
                    hash = hash * 59 + this.Contatto.GetHashCode();
                if (this.Mansione != null)
                    hash = hash * 59 + this.Mansione.GetHashCode();
                if (this.Telnome != null)
                    hash = hash * 59 + this.Telnome.GetHashCode();
                if (this.Faxnome != null)
                    hash = hash * 59 + this.Faxnome.GetHashCode();
                if (this.Cell != null)
                    hash = hash * 59 + this.Cell.GetHashCode();
                if (this.Abitazione != null)
                    hash = hash * 59 + this.Abitazione.GetHashCode();
                if (this.Reparto != null)
                    hash = hash * 59 + this.Reparto.GetHashCode();
                if (this.Ufficio != null)
                    hash = hash * 59 + this.Ufficio.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.Riferimento != null)
                    hash = hash * 59 + this.Riferimento.GetHashCode();
                if (this.Codfis != null)
                    hash = hash * 59 + this.Codfis.GetHashCode();
                if (this.Partiva != null)
                    hash = hash * 59 + this.Partiva.GetHashCode();
                if (this.Priorita != null)
                    hash = hash * 59 + this.Priorita.GetHashCode();
                if (this.Idrubrica != null)
                    hash = hash * 59 + this.Idrubrica.GetHashCode();
                if (this.Idcontatto != null)
                    hash = hash * 59 + this.Idcontatto.GetHashCode();
                if (this.ForceCaseInsensitive != null)
                    hash = hash * 59 + this.ForceCaseInsensitive.GetHashCode();
                if (this.JoinMode != null)
                    hash = hash * 59 + this.JoinMode.GetHashCode();
                if (this.NomeTabella != null)
                    hash = hash * 59 + this.NomeTabella.GetHashCode();
                return hash;
            }
        }
    }

}
