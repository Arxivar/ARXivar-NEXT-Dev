/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EditProfileOptionsDTO
    /// </summary>
    [DataContract]
    public partial class EditProfileOptionsDTO :  IEquatable<EditProfileOptionsDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EditProfileOptionsDTO" /> class.
        /// </summary>
        /// <param name="CanLoadPredefinedProfile">CanLoadPredefinedProfile.</param>
        /// <param name="CanUnlockProfile">CanUnlockProfile.</param>
        /// <param name="CanUnlockProfileMessage">CanUnlockProfileMessage.</param>
        /// <param name="CanSwitch">CanSwitch.</param>
        /// <param name="AllowEditPaFields">AllowEditPaFields.</param>
        /// <param name="WorkflowSubjected">WorkflowSubjected.</param>
        public EditProfileOptionsDTO(bool? CanLoadPredefinedProfile = null, bool? CanUnlockProfile = null, string CanUnlockProfileMessage = null, bool? CanSwitch = null, bool? AllowEditPaFields = null, bool? WorkflowSubjected = null)
        {
            this.CanLoadPredefinedProfile = CanLoadPredefinedProfile;
            this.CanUnlockProfile = CanUnlockProfile;
            this.CanUnlockProfileMessage = CanUnlockProfileMessage;
            this.CanSwitch = CanSwitch;
            this.AllowEditPaFields = AllowEditPaFields;
            this.WorkflowSubjected = WorkflowSubjected;
        }
        
        /// <summary>
        /// Gets or Sets CanLoadPredefinedProfile
        /// </summary>
        [DataMember(Name="canLoadPredefinedProfile", EmitDefaultValue=false)]
        public bool? CanLoadPredefinedProfile { get; set; }
        /// <summary>
        /// Gets or Sets CanUnlockProfile
        /// </summary>
        [DataMember(Name="canUnlockProfile", EmitDefaultValue=false)]
        public bool? CanUnlockProfile { get; set; }
        /// <summary>
        /// Gets or Sets CanUnlockProfileMessage
        /// </summary>
        [DataMember(Name="canUnlockProfileMessage", EmitDefaultValue=false)]
        public string CanUnlockProfileMessage { get; set; }
        /// <summary>
        /// Gets or Sets CanSwitch
        /// </summary>
        [DataMember(Name="canSwitch", EmitDefaultValue=false)]
        public bool? CanSwitch { get; set; }
        /// <summary>
        /// Gets or Sets AllowEditPaFields
        /// </summary>
        [DataMember(Name="allowEditPaFields", EmitDefaultValue=false)]
        public bool? AllowEditPaFields { get; set; }
        /// <summary>
        /// Gets or Sets WorkflowSubjected
        /// </summary>
        [DataMember(Name="workflowSubjected", EmitDefaultValue=false)]
        public bool? WorkflowSubjected { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EditProfileOptionsDTO {\n");
            sb.Append("  CanLoadPredefinedProfile: ").Append(CanLoadPredefinedProfile).Append("\n");
            sb.Append("  CanUnlockProfile: ").Append(CanUnlockProfile).Append("\n");
            sb.Append("  CanUnlockProfileMessage: ").Append(CanUnlockProfileMessage).Append("\n");
            sb.Append("  CanSwitch: ").Append(CanSwitch).Append("\n");
            sb.Append("  AllowEditPaFields: ").Append(AllowEditPaFields).Append("\n");
            sb.Append("  WorkflowSubjected: ").Append(WorkflowSubjected).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as EditProfileOptionsDTO);
        }

        /// <summary>
        /// Returns true if EditProfileOptionsDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of EditProfileOptionsDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EditProfileOptionsDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.CanLoadPredefinedProfile == other.CanLoadPredefinedProfile ||
                    this.CanLoadPredefinedProfile != null &&
                    this.CanLoadPredefinedProfile.Equals(other.CanLoadPredefinedProfile)
                ) && 
                (
                    this.CanUnlockProfile == other.CanUnlockProfile ||
                    this.CanUnlockProfile != null &&
                    this.CanUnlockProfile.Equals(other.CanUnlockProfile)
                ) && 
                (
                    this.CanUnlockProfileMessage == other.CanUnlockProfileMessage ||
                    this.CanUnlockProfileMessage != null &&
                    this.CanUnlockProfileMessage.Equals(other.CanUnlockProfileMessage)
                ) && 
                (
                    this.CanSwitch == other.CanSwitch ||
                    this.CanSwitch != null &&
                    this.CanSwitch.Equals(other.CanSwitch)
                ) && 
                (
                    this.AllowEditPaFields == other.AllowEditPaFields ||
                    this.AllowEditPaFields != null &&
                    this.AllowEditPaFields.Equals(other.AllowEditPaFields)
                ) && 
                (
                    this.WorkflowSubjected == other.WorkflowSubjected ||
                    this.WorkflowSubjected != null &&
                    this.WorkflowSubjected.Equals(other.WorkflowSubjected)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.CanLoadPredefinedProfile != null)
                    hash = hash * 59 + this.CanLoadPredefinedProfile.GetHashCode();
                if (this.CanUnlockProfile != null)
                    hash = hash * 59 + this.CanUnlockProfile.GetHashCode();
                if (this.CanUnlockProfileMessage != null)
                    hash = hash * 59 + this.CanUnlockProfileMessage.GetHashCode();
                if (this.CanSwitch != null)
                    hash = hash * 59 + this.CanSwitch.GetHashCode();
                if (this.AllowEditPaFields != null)
                    hash = hash * 59 + this.AllowEditPaFields.GetHashCode();
                if (this.WorkflowSubjected != null)
                    hash = hash * 59 + this.WorkflowSubjected.GetHashCode();
                return hash;
            }
        }
    }

}
