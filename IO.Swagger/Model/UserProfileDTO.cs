/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// UserProfileDTO
    /// </summary>
    [DataContract]
    public partial class UserProfileDTO :  IEquatable<UserProfileDTO>
    {
        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum To for "To"
            /// </summary>
            [EnumMember(Value = "To")]
            To,
            
            /// <summary>
            /// Enum From for "From"
            /// </summary>
            [EnumMember(Value = "From")]
            From,
            
            /// <summary>
            /// Enum Cc for "Cc"
            /// </summary>
            [EnumMember(Value = "Cc")]
            Cc,
            
            /// <summary>
            /// Enum Senders for "Senders"
            /// </summary>
            [EnumMember(Value = "Senders")]
            Senders
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TypeEnum? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UserProfileDTO" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="ExternalId">ExternalId.</param>
        /// <param name="Description">Description.</param>
        /// <param name="DocNumber">DocNumber.</param>
        /// <param name="Type">Type.</param>
        /// <param name="ContactId">ContactId.</param>
        /// <param name="Fax">Fax.</param>
        /// <param name="Address">Address.</param>
        /// <param name="PostalCode">PostalCode.</param>
        /// <param name="Contact">Contact.</param>
        /// <param name="Job">Job.</param>
        /// <param name="Locality">Locality.</param>
        /// <param name="Province">Province.</param>
        /// <param name="Phone">Phone.</param>
        /// <param name="MobilePhone">MobilePhone.</param>
        /// <param name="TelName">TelName.</param>
        /// <param name="FaxName">FaxName.</param>
        /// <param name="House">House.</param>
        /// <param name="Department">Department.</param>
        /// <param name="Reference">Reference.</param>
        /// <param name="Office">Office.</param>
        /// <param name="Vat">Vat.</param>
        /// <param name="Mail">Mail.</param>
        /// <param name="Priority">Priority.</param>
        /// <param name="Code">Code.</param>
        /// <param name="Email">Email.</param>
        /// <param name="FiscalCode">FiscalCode.</param>
        /// <param name="Nation">Nation.</param>
        /// <param name="AddressBookId">AddressBookId.</param>
        /// <param name="Society">Society.</param>
        public UserProfileDTO(int? Id = null, string ExternalId = null, string Description = null, string DocNumber = null, TypeEnum? Type = null, int? ContactId = null, string Fax = null, string Address = null, string PostalCode = null, string Contact = null, string Job = null, string Locality = null, string Province = null, string Phone = null, string MobilePhone = null, string TelName = null, string FaxName = null, string House = null, string Department = null, string Reference = null, string Office = null, string Vat = null, string Mail = null, string Priority = null, string Code = null, string Email = null, string FiscalCode = null, string Nation = null, int? AddressBookId = null, string Society = null)
        {
            this.Id = Id;
            this.ExternalId = ExternalId;
            this.Description = Description;
            this.DocNumber = DocNumber;
            this.Type = Type;
            this.ContactId = ContactId;
            this.Fax = Fax;
            this.Address = Address;
            this.PostalCode = PostalCode;
            this.Contact = Contact;
            this.Job = Job;
            this.Locality = Locality;
            this.Province = Province;
            this.Phone = Phone;
            this.MobilePhone = MobilePhone;
            this.TelName = TelName;
            this.FaxName = FaxName;
            this.House = House;
            this.Department = Department;
            this.Reference = Reference;
            this.Office = Office;
            this.Vat = Vat;
            this.Mail = Mail;
            this.Priority = Priority;
            this.Code = Code;
            this.Email = Email;
            this.FiscalCode = FiscalCode;
            this.Nation = Nation;
            this.AddressBookId = AddressBookId;
            this.Society = Society;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }
        /// <summary>
        /// Gets or Sets ExternalId
        /// </summary>
        [DataMember(Name="externalId", EmitDefaultValue=false)]
        public string ExternalId { get; set; }
        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }
        /// <summary>
        /// Gets or Sets DocNumber
        /// </summary>
        [DataMember(Name="docNumber", EmitDefaultValue=false)]
        public string DocNumber { get; set; }
        /// <summary>
        /// Gets or Sets ContactId
        /// </summary>
        [DataMember(Name="contactId", EmitDefaultValue=false)]
        public int? ContactId { get; set; }
        /// <summary>
        /// Gets or Sets Fax
        /// </summary>
        [DataMember(Name="fax", EmitDefaultValue=false)]
        public string Fax { get; set; }
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }
        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="postalCode", EmitDefaultValue=false)]
        public string PostalCode { get; set; }
        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name="contact", EmitDefaultValue=false)]
        public string Contact { get; set; }
        /// <summary>
        /// Gets or Sets Job
        /// </summary>
        [DataMember(Name="job", EmitDefaultValue=false)]
        public string Job { get; set; }
        /// <summary>
        /// Gets or Sets Locality
        /// </summary>
        [DataMember(Name="locality", EmitDefaultValue=false)]
        public string Locality { get; set; }
        /// <summary>
        /// Gets or Sets Province
        /// </summary>
        [DataMember(Name="province", EmitDefaultValue=false)]
        public string Province { get; set; }
        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name="phone", EmitDefaultValue=false)]
        public string Phone { get; set; }
        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobilePhone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }
        /// <summary>
        /// Gets or Sets TelName
        /// </summary>
        [DataMember(Name="telName", EmitDefaultValue=false)]
        public string TelName { get; set; }
        /// <summary>
        /// Gets or Sets FaxName
        /// </summary>
        [DataMember(Name="faxName", EmitDefaultValue=false)]
        public string FaxName { get; set; }
        /// <summary>
        /// Gets or Sets House
        /// </summary>
        [DataMember(Name="house", EmitDefaultValue=false)]
        public string House { get; set; }
        /// <summary>
        /// Gets or Sets Department
        /// </summary>
        [DataMember(Name="department", EmitDefaultValue=false)]
        public string Department { get; set; }
        /// <summary>
        /// Gets or Sets Reference
        /// </summary>
        [DataMember(Name="reference", EmitDefaultValue=false)]
        public string Reference { get; set; }
        /// <summary>
        /// Gets or Sets Office
        /// </summary>
        [DataMember(Name="office", EmitDefaultValue=false)]
        public string Office { get; set; }
        /// <summary>
        /// Gets or Sets Vat
        /// </summary>
        [DataMember(Name="vat", EmitDefaultValue=false)]
        public string Vat { get; set; }
        /// <summary>
        /// Gets or Sets Mail
        /// </summary>
        [DataMember(Name="mail", EmitDefaultValue=false)]
        public string Mail { get; set; }
        /// <summary>
        /// Gets or Sets Priority
        /// </summary>
        [DataMember(Name="priority", EmitDefaultValue=false)]
        public string Priority { get; set; }
        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public string Code { get; set; }
        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }
        /// <summary>
        /// Gets or Sets FiscalCode
        /// </summary>
        [DataMember(Name="fiscalCode", EmitDefaultValue=false)]
        public string FiscalCode { get; set; }
        /// <summary>
        /// Gets or Sets Nation
        /// </summary>
        [DataMember(Name="nation", EmitDefaultValue=false)]
        public string Nation { get; set; }
        /// <summary>
        /// Gets or Sets AddressBookId
        /// </summary>
        [DataMember(Name="addressBookId", EmitDefaultValue=false)]
        public int? AddressBookId { get; set; }
        /// <summary>
        /// Gets or Sets Society
        /// </summary>
        [DataMember(Name="society", EmitDefaultValue=false)]
        public string Society { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserProfileDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ExternalId: ").Append(ExternalId).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DocNumber: ").Append(DocNumber).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  ContactId: ").Append(ContactId).Append("\n");
            sb.Append("  Fax: ").Append(Fax).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  Job: ").Append(Job).Append("\n");
            sb.Append("  Locality: ").Append(Locality).Append("\n");
            sb.Append("  Province: ").Append(Province).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  TelName: ").Append(TelName).Append("\n");
            sb.Append("  FaxName: ").Append(FaxName).Append("\n");
            sb.Append("  House: ").Append(House).Append("\n");
            sb.Append("  Department: ").Append(Department).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("  Office: ").Append(Office).Append("\n");
            sb.Append("  Vat: ").Append(Vat).Append("\n");
            sb.Append("  Mail: ").Append(Mail).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FiscalCode: ").Append(FiscalCode).Append("\n");
            sb.Append("  Nation: ").Append(Nation).Append("\n");
            sb.Append("  AddressBookId: ").Append(AddressBookId).Append("\n");
            sb.Append("  Society: ").Append(Society).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as UserProfileDTO);
        }

        /// <summary>
        /// Returns true if UserProfileDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of UserProfileDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserProfileDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.ExternalId == other.ExternalId ||
                    this.ExternalId != null &&
                    this.ExternalId.Equals(other.ExternalId)
                ) && 
                (
                    this.Description == other.Description ||
                    this.Description != null &&
                    this.Description.Equals(other.Description)
                ) && 
                (
                    this.DocNumber == other.DocNumber ||
                    this.DocNumber != null &&
                    this.DocNumber.Equals(other.DocNumber)
                ) && 
                (
                    this.Type == other.Type ||
                    this.Type != null &&
                    this.Type.Equals(other.Type)
                ) && 
                (
                    this.ContactId == other.ContactId ||
                    this.ContactId != null &&
                    this.ContactId.Equals(other.ContactId)
                ) && 
                (
                    this.Fax == other.Fax ||
                    this.Fax != null &&
                    this.Fax.Equals(other.Fax)
                ) && 
                (
                    this.Address == other.Address ||
                    this.Address != null &&
                    this.Address.Equals(other.Address)
                ) && 
                (
                    this.PostalCode == other.PostalCode ||
                    this.PostalCode != null &&
                    this.PostalCode.Equals(other.PostalCode)
                ) && 
                (
                    this.Contact == other.Contact ||
                    this.Contact != null &&
                    this.Contact.Equals(other.Contact)
                ) && 
                (
                    this.Job == other.Job ||
                    this.Job != null &&
                    this.Job.Equals(other.Job)
                ) && 
                (
                    this.Locality == other.Locality ||
                    this.Locality != null &&
                    this.Locality.Equals(other.Locality)
                ) && 
                (
                    this.Province == other.Province ||
                    this.Province != null &&
                    this.Province.Equals(other.Province)
                ) && 
                (
                    this.Phone == other.Phone ||
                    this.Phone != null &&
                    this.Phone.Equals(other.Phone)
                ) && 
                (
                    this.MobilePhone == other.MobilePhone ||
                    this.MobilePhone != null &&
                    this.MobilePhone.Equals(other.MobilePhone)
                ) && 
                (
                    this.TelName == other.TelName ||
                    this.TelName != null &&
                    this.TelName.Equals(other.TelName)
                ) && 
                (
                    this.FaxName == other.FaxName ||
                    this.FaxName != null &&
                    this.FaxName.Equals(other.FaxName)
                ) && 
                (
                    this.House == other.House ||
                    this.House != null &&
                    this.House.Equals(other.House)
                ) && 
                (
                    this.Department == other.Department ||
                    this.Department != null &&
                    this.Department.Equals(other.Department)
                ) && 
                (
                    this.Reference == other.Reference ||
                    this.Reference != null &&
                    this.Reference.Equals(other.Reference)
                ) && 
                (
                    this.Office == other.Office ||
                    this.Office != null &&
                    this.Office.Equals(other.Office)
                ) && 
                (
                    this.Vat == other.Vat ||
                    this.Vat != null &&
                    this.Vat.Equals(other.Vat)
                ) && 
                (
                    this.Mail == other.Mail ||
                    this.Mail != null &&
                    this.Mail.Equals(other.Mail)
                ) && 
                (
                    this.Priority == other.Priority ||
                    this.Priority != null &&
                    this.Priority.Equals(other.Priority)
                ) && 
                (
                    this.Code == other.Code ||
                    this.Code != null &&
                    this.Code.Equals(other.Code)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.FiscalCode == other.FiscalCode ||
                    this.FiscalCode != null &&
                    this.FiscalCode.Equals(other.FiscalCode)
                ) && 
                (
                    this.Nation == other.Nation ||
                    this.Nation != null &&
                    this.Nation.Equals(other.Nation)
                ) && 
                (
                    this.AddressBookId == other.AddressBookId ||
                    this.AddressBookId != null &&
                    this.AddressBookId.Equals(other.AddressBookId)
                ) && 
                (
                    this.Society == other.Society ||
                    this.Society != null &&
                    this.Society.Equals(other.Society)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.ExternalId != null)
                    hash = hash * 59 + this.ExternalId.GetHashCode();
                if (this.Description != null)
                    hash = hash * 59 + this.Description.GetHashCode();
                if (this.DocNumber != null)
                    hash = hash * 59 + this.DocNumber.GetHashCode();
                if (this.Type != null)
                    hash = hash * 59 + this.Type.GetHashCode();
                if (this.ContactId != null)
                    hash = hash * 59 + this.ContactId.GetHashCode();
                if (this.Fax != null)
                    hash = hash * 59 + this.Fax.GetHashCode();
                if (this.Address != null)
                    hash = hash * 59 + this.Address.GetHashCode();
                if (this.PostalCode != null)
                    hash = hash * 59 + this.PostalCode.GetHashCode();
                if (this.Contact != null)
                    hash = hash * 59 + this.Contact.GetHashCode();
                if (this.Job != null)
                    hash = hash * 59 + this.Job.GetHashCode();
                if (this.Locality != null)
                    hash = hash * 59 + this.Locality.GetHashCode();
                if (this.Province != null)
                    hash = hash * 59 + this.Province.GetHashCode();
                if (this.Phone != null)
                    hash = hash * 59 + this.Phone.GetHashCode();
                if (this.MobilePhone != null)
                    hash = hash * 59 + this.MobilePhone.GetHashCode();
                if (this.TelName != null)
                    hash = hash * 59 + this.TelName.GetHashCode();
                if (this.FaxName != null)
                    hash = hash * 59 + this.FaxName.GetHashCode();
                if (this.House != null)
                    hash = hash * 59 + this.House.GetHashCode();
                if (this.Department != null)
                    hash = hash * 59 + this.Department.GetHashCode();
                if (this.Reference != null)
                    hash = hash * 59 + this.Reference.GetHashCode();
                if (this.Office != null)
                    hash = hash * 59 + this.Office.GetHashCode();
                if (this.Vat != null)
                    hash = hash * 59 + this.Vat.GetHashCode();
                if (this.Mail != null)
                    hash = hash * 59 + this.Mail.GetHashCode();
                if (this.Priority != null)
                    hash = hash * 59 + this.Priority.GetHashCode();
                if (this.Code != null)
                    hash = hash * 59 + this.Code.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.FiscalCode != null)
                    hash = hash * 59 + this.FiscalCode.GetHashCode();
                if (this.Nation != null)
                    hash = hash * 59 + this.Nation.GetHashCode();
                if (this.AddressBookId != null)
                    hash = hash * 59 + this.AddressBookId.GetHashCode();
                if (this.Society != null)
                    hash = hash * 59 + this.Society.GetHashCode();
                return hash;
            }
        }
    }

}
