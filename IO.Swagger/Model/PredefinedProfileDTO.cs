/* 
 * Abletech.Arxivar.Server.WebApi.Services
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// PredefinedProfileDTO
    /// </summary>
    [DataContract]
    public partial class PredefinedProfileDTO :  IEquatable<PredefinedProfileDTO>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PredefinedProfileDTO" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Name">Name.</param>
        /// <param name="PostProfilationActions">PostProfilationActions.</param>
        /// <param name="UserCompleteName">UserCompleteName.</param>
        /// <param name="CreationDate">CreationDate.</param>
        /// <param name="DocumentType">DocumentType.</param>
        /// <param name="Aoo">Aoo.</param>
        /// <param name="User">User.</param>
        /// <param name="CollaborationTemplateId">CollaborationTemplateId.</param>
        /// <param name="Fields">Fields.</param>
        public PredefinedProfileDTO(int? Id = null, string Name = null, List<PostProfilationActionDTO> PostProfilationActions = null, string UserCompleteName = null, DateTime? CreationDate = null, int? DocumentType = null, string Aoo = null, int? User = null, string CollaborationTemplateId = null, List<FieldBaseDTO> Fields = null)
        {
            this.Id = Id;
            this.Name = Name;
            this.PostProfilationActions = PostProfilationActions;
            this.UserCompleteName = UserCompleteName;
            this.CreationDate = CreationDate;
            this.DocumentType = DocumentType;
            this.Aoo = Aoo;
            this.User = User;
            this.CollaborationTemplateId = CollaborationTemplateId;
            this.Fields = Fields;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; set; }
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }
        /// <summary>
        /// Gets or Sets PostProfilationActions
        /// </summary>
        [DataMember(Name="postProfilationActions", EmitDefaultValue=false)]
        public List<PostProfilationActionDTO> PostProfilationActions { get; set; }
        /// <summary>
        /// Gets or Sets UserCompleteName
        /// </summary>
        [DataMember(Name="userCompleteName", EmitDefaultValue=false)]
        public string UserCompleteName { get; set; }
        /// <summary>
        /// Gets or Sets CreationDate
        /// </summary>
        [DataMember(Name="creationDate", EmitDefaultValue=false)]
        public DateTime? CreationDate { get; set; }
        /// <summary>
        /// Gets or Sets DocumentType
        /// </summary>
        [DataMember(Name="documentType", EmitDefaultValue=false)]
        public int? DocumentType { get; set; }
        /// <summary>
        /// Gets or Sets Aoo
        /// </summary>
        [DataMember(Name="aoo", EmitDefaultValue=false)]
        public string Aoo { get; set; }
        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public int? User { get; set; }
        /// <summary>
        /// Gets or Sets CollaborationTemplateId
        /// </summary>
        [DataMember(Name="collaborationTemplateId", EmitDefaultValue=false)]
        public string CollaborationTemplateId { get; set; }
        /// <summary>
        /// Gets or Sets Fields
        /// </summary>
        [DataMember(Name="fields", EmitDefaultValue=false)]
        public List<FieldBaseDTO> Fields { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PredefinedProfileDTO {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  PostProfilationActions: ").Append(PostProfilationActions).Append("\n");
            sb.Append("  UserCompleteName: ").Append(UserCompleteName).Append("\n");
            sb.Append("  CreationDate: ").Append(CreationDate).Append("\n");
            sb.Append("  DocumentType: ").Append(DocumentType).Append("\n");
            sb.Append("  Aoo: ").Append(Aoo).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  CollaborationTemplateId: ").Append(CollaborationTemplateId).Append("\n");
            sb.Append("  Fields: ").Append(Fields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as PredefinedProfileDTO);
        }

        /// <summary>
        /// Returns true if PredefinedProfileDTO instances are equal
        /// </summary>
        /// <param name="other">Instance of PredefinedProfileDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PredefinedProfileDTO other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.PostProfilationActions == other.PostProfilationActions ||
                    this.PostProfilationActions != null &&
                    this.PostProfilationActions.SequenceEqual(other.PostProfilationActions)
                ) && 
                (
                    this.UserCompleteName == other.UserCompleteName ||
                    this.UserCompleteName != null &&
                    this.UserCompleteName.Equals(other.UserCompleteName)
                ) && 
                (
                    this.CreationDate == other.CreationDate ||
                    this.CreationDate != null &&
                    this.CreationDate.Equals(other.CreationDate)
                ) && 
                (
                    this.DocumentType == other.DocumentType ||
                    this.DocumentType != null &&
                    this.DocumentType.Equals(other.DocumentType)
                ) && 
                (
                    this.Aoo == other.Aoo ||
                    this.Aoo != null &&
                    this.Aoo.Equals(other.Aoo)
                ) && 
                (
                    this.User == other.User ||
                    this.User != null &&
                    this.User.Equals(other.User)
                ) && 
                (
                    this.CollaborationTemplateId == other.CollaborationTemplateId ||
                    this.CollaborationTemplateId != null &&
                    this.CollaborationTemplateId.Equals(other.CollaborationTemplateId)
                ) && 
                (
                    this.Fields == other.Fields ||
                    this.Fields != null &&
                    this.Fields.SequenceEqual(other.Fields)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                if (this.PostProfilationActions != null)
                    hash = hash * 59 + this.PostProfilationActions.GetHashCode();
                if (this.UserCompleteName != null)
                    hash = hash * 59 + this.UserCompleteName.GetHashCode();
                if (this.CreationDate != null)
                    hash = hash * 59 + this.CreationDate.GetHashCode();
                if (this.DocumentType != null)
                    hash = hash * 59 + this.DocumentType.GetHashCode();
                if (this.Aoo != null)
                    hash = hash * 59 + this.Aoo.GetHashCode();
                if (this.User != null)
                    hash = hash * 59 + this.User.GetHashCode();
                if (this.CollaborationTemplateId != null)
                    hash = hash * 59 + this.CollaborationTemplateId.GetHashCode();
                if (this.Fields != null)
                    hash = hash * 59 + this.Fields.GetHashCode();
                return hash;
            }
        }
    }

}
