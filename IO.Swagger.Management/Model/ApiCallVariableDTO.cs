/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Management.Client.SwaggerDateConverter;

namespace IO.Swagger.Management.Model
{
    /// <summary>
    /// Class of variable for API Call
    /// </summary>
    [DataContract]
    public partial class ApiCallVariableDTO :  IEquatable<ApiCallVariableDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiCallVariableDTO" /> class.
        /// </summary>
        /// <param name="key">Variable key.</param>
        /// <param name="label">Variable label.</param>
        /// <param name="type">Possible values:  0: System  1: SystemAuth  2: Api  3: Custom  4: Profile  5: Variable .</param>
        /// <param name="authMode">Auth mode for system auth variables.</param>
        public ApiCallVariableDTO(string key = default(string), string label = default(string), int? type = default(int?), List<int?> authMode = default(List<int?>))
        {
            this.Key = key;
            this.Label = label;
            this.Type = type;
            this.AuthMode = authMode;
        }
        
        /// <summary>
        /// Variable key
        /// </summary>
        /// <value>Variable key</value>
        [DataMember(Name="key", EmitDefaultValue=false)]
        public string Key { get; set; }

        /// <summary>
        /// Variable label
        /// </summary>
        /// <value>Variable label</value>
        [DataMember(Name="label", EmitDefaultValue=false)]
        public string Label { get; set; }

        /// <summary>
        /// Possible values:  0: System  1: SystemAuth  2: Api  3: Custom  4: Profile  5: Variable 
        /// </summary>
        /// <value>Possible values:  0: System  1: SystemAuth  2: Api  3: Custom  4: Profile  5: Variable </value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public int? Type { get; set; }

        /// <summary>
        /// Auth mode for system auth variables
        /// </summary>
        /// <value>Auth mode for system auth variables</value>
        [DataMember(Name="authMode", EmitDefaultValue=false)]
        public List<int?> AuthMode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiCallVariableDTO {\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  AuthMode: ").Append(AuthMode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiCallVariableDTO);
        }

        /// <summary>
        /// Returns true if ApiCallVariableDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiCallVariableDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiCallVariableDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Key == input.Key ||
                    (this.Key != null &&
                    this.Key.Equals(input.Key))
                ) && 
                (
                    this.Label == input.Label ||
                    (this.Label != null &&
                    this.Label.Equals(input.Label))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.AuthMode == input.AuthMode ||
                    this.AuthMode != null &&
                    this.AuthMode.SequenceEqual(input.AuthMode)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Key != null)
                    hashCode = hashCode * 59 + this.Key.GetHashCode();
                if (this.Label != null)
                    hashCode = hashCode * 59 + this.Label.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.AuthMode != null)
                    hashCode = hashCode * 59 + this.AuthMode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
