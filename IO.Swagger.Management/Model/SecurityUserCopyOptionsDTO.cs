/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Management.Client.SwaggerDateConverter;

namespace IO.Swagger.Management.Model
{
    /// <summary>
    /// Class of options for copy security by user
    /// </summary>
    [DataContract]
    public partial class SecurityUserCopyOptionsDTO :  IEquatable<SecurityUserCopyOptionsDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SecurityUserCopyOptionsDTO" /> class.
        /// </summary>
        /// <param name="sourceUserId">User identifier to copy from.</param>
        /// <param name="destinationUserIds">User identifiers to paste into.</param>
        public SecurityUserCopyOptionsDTO(int? sourceUserId = default(int?), List<int?> destinationUserIds = default(List<int?>))
        {
            this.SourceUserId = sourceUserId;
            this.DestinationUserIds = destinationUserIds;
        }
        
        /// <summary>
        /// User identifier to copy from
        /// </summary>
        /// <value>User identifier to copy from</value>
        [DataMember(Name="sourceUserId", EmitDefaultValue=false)]
        public int? SourceUserId { get; set; }

        /// <summary>
        /// User identifiers to paste into
        /// </summary>
        /// <value>User identifiers to paste into</value>
        [DataMember(Name="destinationUserIds", EmitDefaultValue=false)]
        public List<int?> DestinationUserIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SecurityUserCopyOptionsDTO {\n");
            sb.Append("  SourceUserId: ").Append(SourceUserId).Append("\n");
            sb.Append("  DestinationUserIds: ").Append(DestinationUserIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SecurityUserCopyOptionsDTO);
        }

        /// <summary>
        /// Returns true if SecurityUserCopyOptionsDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of SecurityUserCopyOptionsDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SecurityUserCopyOptionsDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SourceUserId == input.SourceUserId ||
                    (this.SourceUserId != null &&
                    this.SourceUserId.Equals(input.SourceUserId))
                ) && 
                (
                    this.DestinationUserIds == input.DestinationUserIds ||
                    this.DestinationUserIds != null &&
                    this.DestinationUserIds.SequenceEqual(input.DestinationUserIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SourceUserId != null)
                    hashCode = hashCode * 59 + this.SourceUserId.GetHashCode();
                if (this.DestinationUserIds != null)
                    hashCode = hashCode * 59 + this.DestinationUserIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
