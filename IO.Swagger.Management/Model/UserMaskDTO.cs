/* 
 * WebAPI - Area Management
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: management
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Management.Client.SwaggerDateConverter;

namespace IO.Swagger.Management.Model
{
    /// <summary>
    /// Users masks
    /// </summary>
    [DataContract]
    public partial class UserMaskDTO :  IEquatable<UserMaskDTO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UserMaskDTO" /> class.
        /// </summary>
        /// <param name="user">User.</param>
        /// <param name="mask">Mask.</param>
        public UserMaskDTO(UserSimpleDTO user = default(UserSimpleDTO), MaskSimpleDTO mask = default(MaskSimpleDTO))
        {
            this.User = user;
            this.Mask = mask;
        }
        
        /// <summary>
        /// User
        /// </summary>
        /// <value>User</value>
        [DataMember(Name="user", EmitDefaultValue=false)]
        public UserSimpleDTO User { get; set; }

        /// <summary>
        /// Mask
        /// </summary>
        /// <value>Mask</value>
        [DataMember(Name="mask", EmitDefaultValue=false)]
        public MaskSimpleDTO Mask { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class UserMaskDTO {\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  Mask: ").Append(Mask).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as UserMaskDTO);
        }

        /// <summary>
        /// Returns true if UserMaskDTO instances are equal
        /// </summary>
        /// <param name="input">Instance of UserMaskDTO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(UserMaskDTO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                ) && 
                (
                    this.Mask == input.Mask ||
                    (this.Mask != null &&
                    this.Mask.Equals(input.Mask))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.User != null)
                    hashCode = hashCode * 59 + this.User.GetHashCode();
                if (this.Mask != null)
                    hashCode = hashCode * 59 + this.Mask.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
