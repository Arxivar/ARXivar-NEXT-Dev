/* 
 * ARXivar Workflow API
 *
 * ARXivar Workflow API
 *
 * OpenAPI spec version: v1
 * Contact: info@abletech.it
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Workflow.Client.SwaggerDateConverter;

namespace IO.Swagger.Workflow.Model
{
    /// <summary>
    /// The ARXivar settings to store the message
    /// </summary>
    [DataContract]
        public partial class EmailStorageSettingsRm :  IEquatable<EmailStorageSettingsRm>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmailStorageSettingsRm" /> class.
        /// </summary>
        /// <param name="defaultProfile">defaultProfile (required).</param>
        /// <param name="mappings">Profiles mapping.</param>
        public EmailStorageSettingsRm(DefaultProfileInfoRm defaultProfile = default(DefaultProfileInfoRm), List<MappingVariableProfileFieldRm> mappings = default(List<MappingVariableProfileFieldRm>))
        {
            // to ensure "defaultProfile" is required (not null)
            if (defaultProfile == null)
            {
                throw new InvalidDataException("defaultProfile is a required property for EmailStorageSettingsRm and cannot be null");
            }
            else
            {
                this.DefaultProfile = defaultProfile;
            }
            this.Mappings = mappings;
        }
        
        /// <summary>
        /// Gets or Sets DefaultProfile
        /// </summary>
        [DataMember(Name="defaultProfile", EmitDefaultValue=false)]
        public DefaultProfileInfoRm DefaultProfile { get; set; }

        /// <summary>
        /// Profiles mapping
        /// </summary>
        /// <value>Profiles mapping</value>
        [DataMember(Name="mappings", EmitDefaultValue=false)]
        public List<MappingVariableProfileFieldRm> Mappings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailStorageSettingsRm {\n");
            sb.Append("  DefaultProfile: ").Append(DefaultProfile).Append("\n");
            sb.Append("  Mappings: ").Append(Mappings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EmailStorageSettingsRm);
        }

        /// <summary>
        /// Returns true if EmailStorageSettingsRm instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailStorageSettingsRm to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailStorageSettingsRm input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DefaultProfile == input.DefaultProfile ||
                    (this.DefaultProfile != null &&
                    this.DefaultProfile.Equals(input.DefaultProfile))
                ) && 
                (
                    this.Mappings == input.Mappings ||
                    this.Mappings != null &&
                    input.Mappings != null &&
                    this.Mappings.SequenceEqual(input.Mappings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DefaultProfile != null)
                    hashCode = hashCode * 59 + this.DefaultProfile.GetHashCode();
                if (this.Mappings != null)
                    hashCode = hashCode * 59 + this.Mappings.GetHashCode();
                return hashCode;
            }
        }

    }
}
