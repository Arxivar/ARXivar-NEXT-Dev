/* 
 * ARXivar Workflow API
 *
 * ARXivar Workflow API
 *
 * OpenAPI spec version: v1
 * Contact: info@abletech.it
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Workflow.Client.SwaggerDateConverter;

namespace IO.Swagger.Workflow.Model
{
    /// <summary>
    /// Clone operation model
    /// </summary>
    [DataContract]
        public partial class OperationsCloneItemRm :  IEquatable<OperationsCloneItemRm>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OperationsCloneItemRm" /> class.
        /// </summary>
        /// <param name="sourceOperationId">Source operation identifier.</param>
        /// <param name="destOperationId">Destination operation identifier.</param>
        public OperationsCloneItemRm(Guid? sourceOperationId = default(Guid?), Guid? destOperationId = default(Guid?))
        {
            this.SourceOperationId = sourceOperationId;
            this.DestOperationId = destOperationId;
        }
        
        /// <summary>
        /// Source operation identifier
        /// </summary>
        /// <value>Source operation identifier</value>
        [DataMember(Name="sourceOperationId", EmitDefaultValue=false)]
        public Guid? SourceOperationId { get; set; }

        /// <summary>
        /// Destination operation identifier
        /// </summary>
        /// <value>Destination operation identifier</value>
        [DataMember(Name="destOperationId", EmitDefaultValue=false)]
        public Guid? DestOperationId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OperationsCloneItemRm {\n");
            sb.Append("  SourceOperationId: ").Append(SourceOperationId).Append("\n");
            sb.Append("  DestOperationId: ").Append(DestOperationId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OperationsCloneItemRm);
        }

        /// <summary>
        /// Returns true if OperationsCloneItemRm instances are equal
        /// </summary>
        /// <param name="input">Instance of OperationsCloneItemRm to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OperationsCloneItemRm input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SourceOperationId == input.SourceOperationId ||
                    (this.SourceOperationId != null &&
                    this.SourceOperationId.Equals(input.SourceOperationId))
                ) && 
                (
                    this.DestOperationId == input.DestOperationId ||
                    (this.DestOperationId != null &&
                    this.DestOperationId.Equals(input.DestOperationId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SourceOperationId != null)
                    hashCode = hashCode * 59 + this.SourceOperationId.GetHashCode();
                if (this.DestOperationId != null)
                    hashCode = hashCode * 59 + this.DestOperationId.GetHashCode();
                return hashCode;
            }
        }

    }
}
