/* 
 * ARXivar Workflow API
 *
 * ARXivar Workflow API
 *
 * OpenAPI spec version: v1
 * Contact: info@abletech.it
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Workflow.Client.SwaggerDateConverter;

namespace IO.Swagger.Workflow.Model
{
    /// <summary>
    /// Abstract class for recipients
    /// </summary>
    [DataContract]
        public partial class RecipientsRm :  IEquatable<RecipientsRm>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RecipientsRm" /> class.
        /// </summary>
        /// <param name="kind">Specifies the kind of a recipients [0&#x3D;User, 1&#x3D;Variable, 2&#x3D;Mail].</param>
        public RecipientsRm(int? kind = default(int?))
        {
            this.Kind = kind;
        }
        
        /// <summary>
        /// Specifies the kind of a recipients [0&#x3D;User, 1&#x3D;Variable, 2&#x3D;Mail]
        /// </summary>
        /// <value>Specifies the kind of a recipients [0&#x3D;User, 1&#x3D;Variable, 2&#x3D;Mail]</value>
        [DataMember(Name="kind", EmitDefaultValue=false)]
        public int? Kind { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class RecipientsRm {\n");
            sb.Append("  Kind: ").Append(Kind).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as RecipientsRm);
        }

        /// <summary>
        /// Returns true if RecipientsRm instances are equal
        /// </summary>
        /// <param name="input">Instance of RecipientsRm to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(RecipientsRm input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Kind == input.Kind ||
                    (this.Kind != null &&
                    this.Kind.Equals(input.Kind))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Kind != null)
                    hashCode = hashCode * 59 + this.Kind.GetHashCode();
                return hashCode;
            }
        }

    }
}
